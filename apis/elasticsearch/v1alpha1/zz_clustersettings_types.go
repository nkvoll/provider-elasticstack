/*
Copyright Elasticsearch B.V. All rights reserved.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ClusterSettingsInitParameters struct {

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	ElasticsearchConnection []ElasticsearchConnectionInitParameters `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (Block List, Max: 1) Settings will apply across restarts. (see below for nested schema)
	// Settings will apply across restarts.
	Persistent []PersistentInitParameters `json:"persistent,omitempty" tf:"persistent,omitempty"`

	// (Block List, Max: 1) Settings do not survive a full cluster restart. (see below for nested schema)
	// Settings do not survive a full cluster restart.
	Transient []TransientInitParameters `json:"transient,omitempty" tf:"transient,omitempty"`
}

type ClusterSettingsObservation struct {

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	ElasticsearchConnection []ElasticsearchConnectionObservation `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (String) Internal identifier of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Block List, Max: 1) Settings will apply across restarts. (see below for nested schema)
	// Settings will apply across restarts.
	Persistent []PersistentObservation `json:"persistent,omitempty" tf:"persistent,omitempty"`

	// (Block List, Max: 1) Settings do not survive a full cluster restart. (see below for nested schema)
	// Settings do not survive a full cluster restart.
	Transient []TransientObservation `json:"transient,omitempty" tf:"transient,omitempty"`
}

type ClusterSettingsParameters struct {

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	// +kubebuilder:validation:Optional
	ElasticsearchConnection []ElasticsearchConnectionParameters `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (Block List, Max: 1) Settings will apply across restarts. (see below for nested schema)
	// Settings will apply across restarts.
	// +kubebuilder:validation:Optional
	Persistent []PersistentParameters `json:"persistent,omitempty" tf:"persistent,omitempty"`

	// (Block List, Max: 1) Settings do not survive a full cluster restart. (see below for nested schema)
	// Settings do not survive a full cluster restart.
	// +kubebuilder:validation:Optional
	Transient []TransientParameters `json:"transient,omitempty" tf:"transient,omitempty"`
}

type ElasticsearchConnectionInitParameters struct {

	// (String, Sensitive) API Key to use for authentication to Elasticsearch
	// API Key to use for authentication to Elasticsearch
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	Endpoints []*string `json:"endpointsSecretRef,omitempty" tf:"-"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String, Sensitive) PEM encoded private key for client auth
	// PEM encoded private key for client auth
	KeyDataSecretRef *v1.SecretKeySelector `json:"keyDataSecretRef,omitempty" tf:"-"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String, Sensitive) Password to use for API authentication to Elasticsearch.
	// Password to use for API authentication to Elasticsearch.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ElasticsearchConnectionObservation struct {

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ElasticsearchConnectionParameters struct {

	// (String, Sensitive) API Key to use for authentication to Elasticsearch
	// API Key to use for authentication to Elasticsearch
	// +kubebuilder:validation:Optional
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	// +kubebuilder:validation:Optional
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	// +kubebuilder:validation:Optional
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	// +kubebuilder:validation:Optional
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	// +kubebuilder:validation:Optional
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	// +kubebuilder:validation:Optional
	EndpointsSecretRef *[]v1.SecretKeySelector `json:"endpointsSecretRef,omitempty" tf:"-"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	// +kubebuilder:validation:Optional
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String, Sensitive) PEM encoded private key for client auth
	// PEM encoded private key for client auth
	// +kubebuilder:validation:Optional
	KeyDataSecretRef *v1.SecretKeySelector `json:"keyDataSecretRef,omitempty" tf:"-"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	// +kubebuilder:validation:Optional
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String, Sensitive) Password to use for API authentication to Elasticsearch.
	// Password to use for API authentication to Elasticsearch.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type PersistentInitParameters struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	Setting []SettingInitParameters `json:"setting,omitempty" tf:"setting,omitempty"`
}

type PersistentObservation struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	Setting []SettingObservation `json:"setting,omitempty" tf:"setting,omitempty"`
}

type PersistentParameters struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	// +kubebuilder:validation:Optional
	Setting []SettingParameters `json:"setting" tf:"setting,omitempty"`
}

type SettingInitParameters struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

type SettingObservation struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

type SettingParameters struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	// +kubebuilder:validation:Optional
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

type TransientInitParameters struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	Setting []TransientSettingInitParameters `json:"setting,omitempty" tf:"setting,omitempty"`
}

type TransientObservation struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	Setting []TransientSettingObservation `json:"setting,omitempty" tf:"setting,omitempty"`
}

type TransientParameters struct {

	// (Block Set, Min: 1) Defines the setting in the cluster. (see below for nested schema)
	// Defines the setting in the cluster.
	// +kubebuilder:validation:Optional
	Setting []TransientSettingParameters `json:"setting" tf:"setting,omitempty"`
}

type TransientSettingInitParameters struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

type TransientSettingObservation struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

type TransientSettingParameters struct {

	// (String) The name of the setting to set and track.
	// The name of the setting to set and track.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`

	// (List of String) The list of values to be set for the key, where the list is required.
	// The list of values to be set for the key, where the list is required.
	// +kubebuilder:validation:Optional
	ValueList []*string `json:"valueList,omitempty" tf:"value_list,omitempty"`
}

// ClusterSettingsSpec defines the desired state of ClusterSettings
type ClusterSettingsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ClusterSettingsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ClusterSettingsInitParameters `json:"initProvider,omitempty"`
}

// ClusterSettingsStatus defines the observed state of ClusterSettings.
type ClusterSettingsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ClusterSettingsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ClusterSettings is the Schema for the ClusterSettingss API. Updates cluster-wide settings.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,elasticstack}
type ClusterSettings struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ClusterSettingsSpec   `json:"spec"`
	Status            ClusterSettingsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ClusterSettingsList contains a list of ClusterSettingss
type ClusterSettingsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ClusterSettings `json:"items"`
}

// Repository type metadata.
var (
	ClusterSettings_Kind             = "ClusterSettings"
	ClusterSettings_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ClusterSettings_Kind}.String()
	ClusterSettings_KindAPIVersion   = ClusterSettings_Kind + "." + CRDGroupVersion.String()
	ClusterSettings_GroupVersionKind = CRDGroupVersion.WithKind(ClusterSettings_Kind)
)

func init() {
	SchemeBuilder.Register(&ClusterSettings{}, &ClusterSettingsList{})
}
