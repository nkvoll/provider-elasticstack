//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasInitParameters) DeepCopyInto(out *AliasInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasInitParameters.
func (in *AliasInitParameters) DeepCopy() *AliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(AliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasObservation) DeepCopyInto(out *AliasObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasObservation.
func (in *AliasObservation) DeepCopy() *AliasObservation {
	if in == nil {
		return nil
	}
	out := new(AliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AliasParameters) DeepCopyInto(out *AliasParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AliasParameters.
func (in *AliasParameters) DeepCopy() *AliasParameters {
	if in == nil {
		return nil
	}
	out := new(AliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocateInitParameters) DeepCopyInto(out *AllocateInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocateInitParameters.
func (in *AllocateInitParameters) DeepCopy() *AllocateInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllocateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocateObservation) DeepCopyInto(out *AllocateObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocateObservation.
func (in *AllocateObservation) DeepCopy() *AllocateObservation {
	if in == nil {
		return nil
	}
	out := new(AllocateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllocateParameters) DeepCopyInto(out *AllocateParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllocateParameters.
func (in *AllocateParameters) DeepCopy() *AllocateParameters {
	if in == nil {
		return nil
	}
	out := new(AllocateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationsInitParameters) DeepCopyInto(out *ApplicationsInitParameters) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationsInitParameters.
func (in *ApplicationsInitParameters) DeepCopy() *ApplicationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationsObservation) DeepCopyInto(out *ApplicationsObservation) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationsObservation.
func (in *ApplicationsObservation) DeepCopy() *ApplicationsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationsParameters) DeepCopyInto(out *ApplicationsParameters) {
	*out = *in
	if in.Application != nil {
		in, out := &in.Application, &out.Application
		*out = new(string)
		**out = **in
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationsParameters.
func (in *ApplicationsParameters) DeepCopy() *ApplicationsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureInitParameters) DeepCopyInto(out *AzureInitParameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.LocationMode != nil {
		in, out := &in.LocationMode, &out.LocationMode
		*out = new(string)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureInitParameters.
func (in *AzureInitParameters) DeepCopy() *AzureInitParameters {
	if in == nil {
		return nil
	}
	out := new(AzureInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureObservation) DeepCopyInto(out *AzureObservation) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.LocationMode != nil {
		in, out := &in.LocationMode, &out.LocationMode
		*out = new(string)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureObservation.
func (in *AzureObservation) DeepCopy() *AzureObservation {
	if in == nil {
		return nil
	}
	out := new(AzureObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AzureParameters) DeepCopyInto(out *AzureParameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(string)
		**out = **in
	}
	if in.LocationMode != nil {
		in, out := &in.LocationMode, &out.LocationMode
		*out = new(string)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AzureParameters.
func (in *AzureParameters) DeepCopy() *AzureParameters {
	if in == nil {
		return nil
	}
	out := new(AzureParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettings) DeepCopyInto(out *ClusterSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettings.
func (in *ClusterSettings) DeepCopy() *ClusterSettings {
	if in == nil {
		return nil
	}
	out := new(ClusterSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsInitParameters) DeepCopyInto(out *ClusterSettingsInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Persistent != nil {
		in, out := &in.Persistent, &out.Persistent
		*out = make([]PersistentInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transient != nil {
		in, out := &in.Transient, &out.Transient
		*out = make([]TransientInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsInitParameters.
func (in *ClusterSettingsInitParameters) DeepCopy() *ClusterSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsList) DeepCopyInto(out *ClusterSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsList.
func (in *ClusterSettingsList) DeepCopy() *ClusterSettingsList {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsObservation) DeepCopyInto(out *ClusterSettingsObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Persistent != nil {
		in, out := &in.Persistent, &out.Persistent
		*out = make([]PersistentObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transient != nil {
		in, out := &in.Transient, &out.Transient
		*out = make([]TransientObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsObservation.
func (in *ClusterSettingsObservation) DeepCopy() *ClusterSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsParameters) DeepCopyInto(out *ClusterSettingsParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Persistent != nil {
		in, out := &in.Persistent, &out.Persistent
		*out = make([]PersistentParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Transient != nil {
		in, out := &in.Transient, &out.Transient
		*out = make([]TransientParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsParameters.
func (in *ClusterSettingsParameters) DeepCopy() *ClusterSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsSpec) DeepCopyInto(out *ClusterSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsSpec.
func (in *ClusterSettingsSpec) DeepCopy() *ClusterSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSettingsStatus) DeepCopyInto(out *ClusterSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSettingsStatus.
func (in *ClusterSettingsStatus) DeepCopy() *ClusterSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdInitParameters) DeepCopyInto(out *ColdInitParameters) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]AllocateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Freeze != nil {
		in, out := &in.Freeze, &out.Freeze
		*out = make([]FreezeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]MigrateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]ReadonlyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]SearchableSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]SetPriorityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]UnfollowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdInitParameters.
func (in *ColdInitParameters) DeepCopy() *ColdInitParameters {
	if in == nil {
		return nil
	}
	out := new(ColdInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdObservation) DeepCopyInto(out *ColdObservation) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]AllocateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Freeze != nil {
		in, out := &in.Freeze, &out.Freeze
		*out = make([]FreezeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]MigrateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]ReadonlyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]SearchableSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]SetPriorityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]UnfollowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdObservation.
func (in *ColdObservation) DeepCopy() *ColdObservation {
	if in == nil {
		return nil
	}
	out := new(ColdObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ColdParameters) DeepCopyInto(out *ColdParameters) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]AllocateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Freeze != nil {
		in, out := &in.Freeze, &out.Freeze
		*out = make([]FreezeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]MigrateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]ReadonlyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]SearchableSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]SetPriorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]UnfollowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ColdParameters.
func (in *ColdParameters) DeepCopy() *ColdParameters {
	if in == nil {
		return nil
	}
	out := new(ColdParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplate) DeepCopyInto(out *ComponentTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplate.
func (in *ComponentTemplate) DeepCopy() *ComponentTemplate {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateElasticsearchConnectionInitParameters) DeepCopyInto(out *ComponentTemplateElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateElasticsearchConnectionInitParameters.
func (in *ComponentTemplateElasticsearchConnectionInitParameters) DeepCopy() *ComponentTemplateElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateElasticsearchConnectionObservation) DeepCopyInto(out *ComponentTemplateElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateElasticsearchConnectionObservation.
func (in *ComponentTemplateElasticsearchConnectionObservation) DeepCopy() *ComponentTemplateElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateElasticsearchConnectionParameters) DeepCopyInto(out *ComponentTemplateElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateElasticsearchConnectionParameters.
func (in *ComponentTemplateElasticsearchConnectionParameters) DeepCopy() *ComponentTemplateElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateInitParameters) DeepCopyInto(out *ComponentTemplateInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ComponentTemplateElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateInitParameters.
func (in *ComponentTemplateInitParameters) DeepCopy() *ComponentTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateList) DeepCopyInto(out *ComponentTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComponentTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateList.
func (in *ComponentTemplateList) DeepCopy() *ComponentTemplateList {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComponentTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateObservation) DeepCopyInto(out *ComponentTemplateObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ComponentTemplateElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateObservation.
func (in *ComponentTemplateObservation) DeepCopy() *ComponentTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateParameters) DeepCopyInto(out *ComponentTemplateParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ComponentTemplateElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]TemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateParameters.
func (in *ComponentTemplateParameters) DeepCopy() *ComponentTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateSpec) DeepCopyInto(out *ComponentTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateSpec.
func (in *ComponentTemplateSpec) DeepCopy() *ComponentTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentTemplateStatus) DeepCopyInto(out *ComponentTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentTemplateStatus.
func (in *ComponentTemplateStatus) DeepCopy() *ComponentTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(ComponentTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStream) DeepCopyInto(out *DataStream) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStream.
func (in *DataStream) DeepCopy() *DataStream {
	if in == nil {
		return nil
	}
	out := new(DataStream)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataStream) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamElasticsearchConnectionInitParameters) DeepCopyInto(out *DataStreamElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamElasticsearchConnectionInitParameters.
func (in *DataStreamElasticsearchConnectionInitParameters) DeepCopy() *DataStreamElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataStreamElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamElasticsearchConnectionObservation) DeepCopyInto(out *DataStreamElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamElasticsearchConnectionObservation.
func (in *DataStreamElasticsearchConnectionObservation) DeepCopy() *DataStreamElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(DataStreamElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamElasticsearchConnectionParameters) DeepCopyInto(out *DataStreamElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamElasticsearchConnectionParameters.
func (in *DataStreamElasticsearchConnectionParameters) DeepCopy() *DataStreamElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(DataStreamElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamInitParameters) DeepCopyInto(out *DataStreamInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]DataStreamElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamInitParameters.
func (in *DataStreamInitParameters) DeepCopy() *DataStreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(DataStreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamList) DeepCopyInto(out *DataStreamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DataStream, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamList.
func (in *DataStreamList) DeepCopy() *DataStreamList {
	if in == nil {
		return nil
	}
	out := new(DataStreamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DataStreamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamObservation) DeepCopyInto(out *DataStreamObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]DataStreamElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Generation != nil {
		in, out := &in.Generation, &out.Generation
		*out = new(float64)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IlmPolicy != nil {
		in, out := &in.IlmPolicy, &out.IlmPolicy
		*out = new(string)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]IndicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Replicated != nil {
		in, out := &in.Replicated, &out.Replicated
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.System != nil {
		in, out := &in.System, &out.System
		*out = new(bool)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = new(string)
		**out = **in
	}
	if in.TimestampField != nil {
		in, out := &in.TimestampField, &out.TimestampField
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamObservation.
func (in *DataStreamObservation) DeepCopy() *DataStreamObservation {
	if in == nil {
		return nil
	}
	out := new(DataStreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamParameters) DeepCopyInto(out *DataStreamParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]DataStreamElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamParameters.
func (in *DataStreamParameters) DeepCopy() *DataStreamParameters {
	if in == nil {
		return nil
	}
	out := new(DataStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamSpec) DeepCopyInto(out *DataStreamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamSpec.
func (in *DataStreamSpec) DeepCopy() *DataStreamSpec {
	if in == nil {
		return nil
	}
	out := new(DataStreamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DataStreamStatus) DeepCopyInto(out *DataStreamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DataStreamStatus.
func (in *DataStreamStatus) DeepCopy() *DataStreamStatus {
	if in == nil {
		return nil
	}
	out := new(DataStreamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteDeleteInitParameters) DeepCopyInto(out *DeleteDeleteInitParameters) {
	*out = *in
	if in.DeleteSearchableSnapshot != nil {
		in, out := &in.DeleteSearchableSnapshot, &out.DeleteSearchableSnapshot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteDeleteInitParameters.
func (in *DeleteDeleteInitParameters) DeepCopy() *DeleteDeleteInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeleteDeleteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteDeleteObservation) DeepCopyInto(out *DeleteDeleteObservation) {
	*out = *in
	if in.DeleteSearchableSnapshot != nil {
		in, out := &in.DeleteSearchableSnapshot, &out.DeleteSearchableSnapshot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteDeleteObservation.
func (in *DeleteDeleteObservation) DeepCopy() *DeleteDeleteObservation {
	if in == nil {
		return nil
	}
	out := new(DeleteDeleteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteDeleteParameters) DeepCopyInto(out *DeleteDeleteParameters) {
	*out = *in
	if in.DeleteSearchableSnapshot != nil {
		in, out := &in.DeleteSearchableSnapshot, &out.DeleteSearchableSnapshot
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteDeleteParameters.
func (in *DeleteDeleteParameters) DeepCopy() *DeleteDeleteParameters {
	if in == nil {
		return nil
	}
	out := new(DeleteDeleteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteInitParameters) DeepCopyInto(out *DeleteInitParameters) {
	*out = *in
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteDeleteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.WaitForSnapshot != nil {
		in, out := &in.WaitForSnapshot, &out.WaitForSnapshot
		*out = make([]WaitForSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteInitParameters.
func (in *DeleteInitParameters) DeepCopy() *DeleteInitParameters {
	if in == nil {
		return nil
	}
	out := new(DeleteInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteObservation) DeepCopyInto(out *DeleteObservation) {
	*out = *in
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteDeleteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.WaitForSnapshot != nil {
		in, out := &in.WaitForSnapshot, &out.WaitForSnapshot
		*out = make([]WaitForSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteObservation.
func (in *DeleteObservation) DeepCopy() *DeleteObservation {
	if in == nil {
		return nil
	}
	out := new(DeleteObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeleteParameters) DeepCopyInto(out *DeleteParameters) {
	*out = *in
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteDeleteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.WaitForSnapshot != nil {
		in, out := &in.WaitForSnapshot, &out.WaitForSnapshot
		*out = make([]WaitForSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeleteParameters.
func (in *DeleteParameters) DeepCopy() *DeleteParameters {
	if in == nil {
		return nil
	}
	out := new(DeleteParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationInitParameters) DeepCopyInto(out *DestinationInitParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationInitParameters.
func (in *DestinationInitParameters) DeepCopy() *DestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationObservation) DeepCopyInto(out *DestinationObservation) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationObservation.
func (in *DestinationObservation) DeepCopy() *DestinationObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationParameters) DeepCopyInto(out *DestinationParameters) {
	*out = *in
	if in.Index != nil {
		in, out := &in.Index, &out.Index
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationParameters.
func (in *DestinationParameters) DeepCopy() *DestinationParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectionInitParameters) DeepCopyInto(out *ElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectionInitParameters.
func (in *ElasticsearchConnectionInitParameters) DeepCopy() *ElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectionObservation) DeepCopyInto(out *ElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectionObservation.
func (in *ElasticsearchConnectionObservation) DeepCopy() *ElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ElasticsearchConnectionParameters) DeepCopyInto(out *ElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ElasticsearchConnectionParameters.
func (in *ElasticsearchConnectionParameters) DeepCopy() *ElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicy) DeepCopyInto(out *EnrichPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicy.
func (in *EnrichPolicy) DeepCopy() *EnrichPolicy {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnrichPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyElasticsearchConnectionInitParameters) DeepCopyInto(out *EnrichPolicyElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyElasticsearchConnectionInitParameters.
func (in *EnrichPolicyElasticsearchConnectionInitParameters) DeepCopy() *EnrichPolicyElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyElasticsearchConnectionObservation) DeepCopyInto(out *EnrichPolicyElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyElasticsearchConnectionObservation.
func (in *EnrichPolicyElasticsearchConnectionObservation) DeepCopy() *EnrichPolicyElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyElasticsearchConnectionParameters) DeepCopyInto(out *EnrichPolicyElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyElasticsearchConnectionParameters.
func (in *EnrichPolicyElasticsearchConnectionParameters) DeepCopy() *EnrichPolicyElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyInitParameters) DeepCopyInto(out *EnrichPolicyInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]EnrichPolicyElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnrichFields != nil {
		in, out := &in.EnrichFields, &out.EnrichFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Execute != nil {
		in, out := &in.Execute, &out.Execute
		*out = new(bool)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchField != nil {
		in, out := &in.MatchField, &out.MatchField
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyType != nil {
		in, out := &in.PolicyType, &out.PolicyType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyInitParameters.
func (in *EnrichPolicyInitParameters) DeepCopy() *EnrichPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyList) DeepCopyInto(out *EnrichPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnrichPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyList.
func (in *EnrichPolicyList) DeepCopy() *EnrichPolicyList {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnrichPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyObservation) DeepCopyInto(out *EnrichPolicyObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]EnrichPolicyElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnrichFields != nil {
		in, out := &in.EnrichFields, &out.EnrichFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Execute != nil {
		in, out := &in.Execute, &out.Execute
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchField != nil {
		in, out := &in.MatchField, &out.MatchField
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyType != nil {
		in, out := &in.PolicyType, &out.PolicyType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyObservation.
func (in *EnrichPolicyObservation) DeepCopy() *EnrichPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyParameters) DeepCopyInto(out *EnrichPolicyParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]EnrichPolicyElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EnrichFields != nil {
		in, out := &in.EnrichFields, &out.EnrichFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Execute != nil {
		in, out := &in.Execute, &out.Execute
		*out = new(bool)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MatchField != nil {
		in, out := &in.MatchField, &out.MatchField
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyType != nil {
		in, out := &in.PolicyType, &out.PolicyType
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyParameters.
func (in *EnrichPolicyParameters) DeepCopy() *EnrichPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicySpec) DeepCopyInto(out *EnrichPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicySpec.
func (in *EnrichPolicySpec) DeepCopy() *EnrichPolicySpec {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnrichPolicyStatus) DeepCopyInto(out *EnrichPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnrichPolicyStatus.
func (in *EnrichPolicyStatus) DeepCopy() *EnrichPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(EnrichPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSecurityInitParameters) DeepCopyInto(out *FieldSecurityInitParameters) {
	*out = *in
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSecurityInitParameters.
func (in *FieldSecurityInitParameters) DeepCopy() *FieldSecurityInitParameters {
	if in == nil {
		return nil
	}
	out := new(FieldSecurityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSecurityObservation) DeepCopyInto(out *FieldSecurityObservation) {
	*out = *in
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSecurityObservation.
func (in *FieldSecurityObservation) DeepCopy() *FieldSecurityObservation {
	if in == nil {
		return nil
	}
	out := new(FieldSecurityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FieldSecurityParameters) DeepCopyInto(out *FieldSecurityParameters) {
	*out = *in
	if in.Except != nil {
		in, out := &in.Except, &out.Except
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Grant != nil {
		in, out := &in.Grant, &out.Grant
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FieldSecurityParameters.
func (in *FieldSecurityParameters) DeepCopy() *FieldSecurityParameters {
	if in == nil {
		return nil
	}
	out := new(FieldSecurityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForcemergeInitParameters) DeepCopyInto(out *ForcemergeInitParameters) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForcemergeInitParameters.
func (in *ForcemergeInitParameters) DeepCopy() *ForcemergeInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForcemergeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForcemergeObservation) DeepCopyInto(out *ForcemergeObservation) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForcemergeObservation.
func (in *ForcemergeObservation) DeepCopy() *ForcemergeObservation {
	if in == nil {
		return nil
	}
	out := new(ForcemergeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForcemergeParameters) DeepCopyInto(out *ForcemergeParameters) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForcemergeParameters.
func (in *ForcemergeParameters) DeepCopy() *ForcemergeParameters {
	if in == nil {
		return nil
	}
	out := new(ForcemergeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreezeInitParameters) DeepCopyInto(out *FreezeInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreezeInitParameters.
func (in *FreezeInitParameters) DeepCopy() *FreezeInitParameters {
	if in == nil {
		return nil
	}
	out := new(FreezeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreezeObservation) DeepCopyInto(out *FreezeObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreezeObservation.
func (in *FreezeObservation) DeepCopy() *FreezeObservation {
	if in == nil {
		return nil
	}
	out := new(FreezeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreezeParameters) DeepCopyInto(out *FreezeParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreezeParameters.
func (in *FreezeParameters) DeepCopy() *FreezeParameters {
	if in == nil {
		return nil
	}
	out := new(FreezeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenInitParameters) DeepCopyInto(out *FrozenInitParameters) {
	*out = *in
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]FrozenSearchableSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenInitParameters.
func (in *FrozenInitParameters) DeepCopy() *FrozenInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrozenInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenObservation) DeepCopyInto(out *FrozenObservation) {
	*out = *in
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]FrozenSearchableSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenObservation.
func (in *FrozenObservation) DeepCopy() *FrozenObservation {
	if in == nil {
		return nil
	}
	out := new(FrozenObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenParameters) DeepCopyInto(out *FrozenParameters) {
	*out = *in
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]FrozenSearchableSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenParameters.
func (in *FrozenParameters) DeepCopy() *FrozenParameters {
	if in == nil {
		return nil
	}
	out := new(FrozenParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenSearchableSnapshotInitParameters) DeepCopyInto(out *FrozenSearchableSnapshotInitParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenSearchableSnapshotInitParameters.
func (in *FrozenSearchableSnapshotInitParameters) DeepCopy() *FrozenSearchableSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(FrozenSearchableSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenSearchableSnapshotObservation) DeepCopyInto(out *FrozenSearchableSnapshotObservation) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenSearchableSnapshotObservation.
func (in *FrozenSearchableSnapshotObservation) DeepCopy() *FrozenSearchableSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(FrozenSearchableSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FrozenSearchableSnapshotParameters) DeepCopyInto(out *FrozenSearchableSnapshotParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FrozenSearchableSnapshotParameters.
func (in *FrozenSearchableSnapshotParameters) DeepCopy() *FrozenSearchableSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(FrozenSearchableSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FsInitParameters) DeepCopyInto(out *FsInitParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FsInitParameters.
func (in *FsInitParameters) DeepCopy() *FsInitParameters {
	if in == nil {
		return nil
	}
	out := new(FsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FsObservation) DeepCopyInto(out *FsObservation) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FsObservation.
func (in *FsObservation) DeepCopy() *FsObservation {
	if in == nil {
		return nil
	}
	out := new(FsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FsParameters) DeepCopyInto(out *FsParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.Location != nil {
		in, out := &in.Location, &out.Location
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FsParameters.
func (in *FsParameters) DeepCopy() *FsParameters {
	if in == nil {
		return nil
	}
	out := new(FsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsInitParameters) DeepCopyInto(out *GcsInitParameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsInitParameters.
func (in *GcsInitParameters) DeepCopy() *GcsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsObservation) DeepCopyInto(out *GcsObservation) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsObservation.
func (in *GcsObservation) DeepCopy() *GcsObservation {
	if in == nil {
		return nil
	}
	out := new(GcsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcsParameters) DeepCopyInto(out *GcsParameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcsParameters.
func (in *GcsParameters) DeepCopy() *GcsParameters {
	if in == nil {
		return nil
	}
	out := new(GcsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdfsInitParameters) DeepCopyInto(out *HdfsInitParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.LoadDefaults != nil {
		in, out := &in.LoadDefaults, &out.LoadDefaults
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdfsInitParameters.
func (in *HdfsInitParameters) DeepCopy() *HdfsInitParameters {
	if in == nil {
		return nil
	}
	out := new(HdfsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdfsObservation) DeepCopyInto(out *HdfsObservation) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.LoadDefaults != nil {
		in, out := &in.LoadDefaults, &out.LoadDefaults
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdfsObservation.
func (in *HdfsObservation) DeepCopy() *HdfsObservation {
	if in == nil {
		return nil
	}
	out := new(HdfsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HdfsParameters) DeepCopyInto(out *HdfsParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.LoadDefaults != nil {
		in, out := &in.LoadDefaults, &out.LoadDefaults
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HdfsParameters.
func (in *HdfsParameters) DeepCopy() *HdfsParameters {
	if in == nil {
		return nil
	}
	out := new(HdfsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotInitParameters) DeepCopyInto(out *HotInitParameters) {
	*out = *in
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]ForcemergeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]HotReadonlyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rollover != nil {
		in, out := &in.Rollover, &out.Rollover
		*out = make([]RolloverInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]HotSearchableSnapshotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]HotSetPriorityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]ShrinkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]HotUnfollowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotInitParameters.
func (in *HotInitParameters) DeepCopy() *HotInitParameters {
	if in == nil {
		return nil
	}
	out := new(HotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotObservation) DeepCopyInto(out *HotObservation) {
	*out = *in
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]ForcemergeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]HotReadonlyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rollover != nil {
		in, out := &in.Rollover, &out.Rollover
		*out = make([]RolloverObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]HotSearchableSnapshotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]HotSetPriorityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]ShrinkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]HotUnfollowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotObservation.
func (in *HotObservation) DeepCopy() *HotObservation {
	if in == nil {
		return nil
	}
	out := new(HotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotParameters) DeepCopyInto(out *HotParameters) {
	*out = *in
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]ForcemergeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]HotReadonlyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rollover != nil {
		in, out := &in.Rollover, &out.Rollover
		*out = make([]RolloverParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SearchableSnapshot != nil {
		in, out := &in.SearchableSnapshot, &out.SearchableSnapshot
		*out = make([]HotSearchableSnapshotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]HotSetPriorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]ShrinkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]HotUnfollowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotParameters.
func (in *HotParameters) DeepCopy() *HotParameters {
	if in == nil {
		return nil
	}
	out := new(HotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotReadonlyInitParameters) DeepCopyInto(out *HotReadonlyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotReadonlyInitParameters.
func (in *HotReadonlyInitParameters) DeepCopy() *HotReadonlyInitParameters {
	if in == nil {
		return nil
	}
	out := new(HotReadonlyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotReadonlyObservation) DeepCopyInto(out *HotReadonlyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotReadonlyObservation.
func (in *HotReadonlyObservation) DeepCopy() *HotReadonlyObservation {
	if in == nil {
		return nil
	}
	out := new(HotReadonlyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotReadonlyParameters) DeepCopyInto(out *HotReadonlyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotReadonlyParameters.
func (in *HotReadonlyParameters) DeepCopy() *HotReadonlyParameters {
	if in == nil {
		return nil
	}
	out := new(HotReadonlyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSearchableSnapshotInitParameters) DeepCopyInto(out *HotSearchableSnapshotInitParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSearchableSnapshotInitParameters.
func (in *HotSearchableSnapshotInitParameters) DeepCopy() *HotSearchableSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(HotSearchableSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSearchableSnapshotObservation) DeepCopyInto(out *HotSearchableSnapshotObservation) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSearchableSnapshotObservation.
func (in *HotSearchableSnapshotObservation) DeepCopy() *HotSearchableSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(HotSearchableSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSearchableSnapshotParameters) DeepCopyInto(out *HotSearchableSnapshotParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSearchableSnapshotParameters.
func (in *HotSearchableSnapshotParameters) DeepCopy() *HotSearchableSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(HotSearchableSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSetPriorityInitParameters) DeepCopyInto(out *HotSetPriorityInitParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSetPriorityInitParameters.
func (in *HotSetPriorityInitParameters) DeepCopy() *HotSetPriorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(HotSetPriorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSetPriorityObservation) DeepCopyInto(out *HotSetPriorityObservation) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSetPriorityObservation.
func (in *HotSetPriorityObservation) DeepCopy() *HotSetPriorityObservation {
	if in == nil {
		return nil
	}
	out := new(HotSetPriorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotSetPriorityParameters) DeepCopyInto(out *HotSetPriorityParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotSetPriorityParameters.
func (in *HotSetPriorityParameters) DeepCopy() *HotSetPriorityParameters {
	if in == nil {
		return nil
	}
	out := new(HotSetPriorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotUnfollowInitParameters) DeepCopyInto(out *HotUnfollowInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotUnfollowInitParameters.
func (in *HotUnfollowInitParameters) DeepCopy() *HotUnfollowInitParameters {
	if in == nil {
		return nil
	}
	out := new(HotUnfollowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotUnfollowObservation) DeepCopyInto(out *HotUnfollowObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotUnfollowObservation.
func (in *HotUnfollowObservation) DeepCopy() *HotUnfollowObservation {
	if in == nil {
		return nil
	}
	out := new(HotUnfollowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HotUnfollowParameters) DeepCopyInto(out *HotUnfollowParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HotUnfollowParameters.
func (in *HotUnfollowParameters) DeepCopy() *HotUnfollowParameters {
	if in == nil {
		return nil
	}
	out := new(HotUnfollowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Index) DeepCopyInto(out *Index) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Index.
func (in *Index) DeepCopy() *Index {
	if in == nil {
		return nil
	}
	out := new(Index)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Index) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexAliasInitParameters) DeepCopyInto(out *IndexAliasInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexAliasInitParameters.
func (in *IndexAliasInitParameters) DeepCopy() *IndexAliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexAliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexAliasObservation) DeepCopyInto(out *IndexAliasObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexAliasObservation.
func (in *IndexAliasObservation) DeepCopy() *IndexAliasObservation {
	if in == nil {
		return nil
	}
	out := new(IndexAliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexAliasParameters) DeepCopyInto(out *IndexAliasParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexAliasParameters.
func (in *IndexAliasParameters) DeepCopy() *IndexAliasParameters {
	if in == nil {
		return nil
	}
	out := new(IndexAliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexElasticsearchConnectionInitParameters) DeepCopyInto(out *IndexElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexElasticsearchConnectionInitParameters.
func (in *IndexElasticsearchConnectionInitParameters) DeepCopy() *IndexElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexElasticsearchConnectionObservation) DeepCopyInto(out *IndexElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexElasticsearchConnectionObservation.
func (in *IndexElasticsearchConnectionObservation) DeepCopy() *IndexElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(IndexElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexElasticsearchConnectionParameters) DeepCopyInto(out *IndexElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexElasticsearchConnectionParameters.
func (in *IndexElasticsearchConnectionParameters) DeepCopy() *IndexElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(IndexElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexInitParameters) DeepCopyInto(out *IndexInitParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]IndexAliasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisAnalyzer != nil {
		in, out := &in.AnalysisAnalyzer, &out.AnalysisAnalyzer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisCharFilter != nil {
		in, out := &in.AnalysisCharFilter, &out.AnalysisCharFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisFilter != nil {
		in, out := &in.AnalysisFilter, &out.AnalysisFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisNormalizer != nil {
		in, out := &in.AnalysisNormalizer, &out.AnalysisNormalizer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisTokenizer != nil {
		in, out := &in.AnalysisTokenizer, &out.AnalysisTokenizer
		*out = new(string)
		**out = **in
	}
	if in.AnalyzeMaxTokenCount != nil {
		in, out := &in.AnalyzeMaxTokenCount, &out.AnalyzeMaxTokenCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoExpandReplicas != nil {
		in, out := &in.AutoExpandReplicas, &out.AutoExpandReplicas
		*out = new(string)
		**out = **in
	}
	if in.BlocksMetadata != nil {
		in, out := &in.BlocksMetadata, &out.BlocksMetadata
		*out = new(bool)
		**out = **in
	}
	if in.BlocksRead != nil {
		in, out := &in.BlocksRead, &out.BlocksRead
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnly != nil {
		in, out := &in.BlocksReadOnly, &out.BlocksReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnlyAllowDelete != nil {
		in, out := &in.BlocksReadOnlyAllowDelete, &out.BlocksReadOnlyAllowDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlocksWrite != nil {
		in, out := &in.BlocksWrite, &out.BlocksWrite
		*out = new(bool)
		**out = **in
	}
	if in.Codec != nil {
		in, out := &in.Codec, &out.Codec
		*out = new(string)
		**out = **in
	}
	if in.DefaultPipeline != nil {
		in, out := &in.DefaultPipeline, &out.DefaultPipeline
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FinalPipeline != nil {
		in, out := &in.FinalPipeline, &out.FinalPipeline
		*out = new(string)
		**out = **in
	}
	if in.GcDeletes != nil {
		in, out := &in.GcDeletes, &out.GcDeletes
		*out = new(string)
		**out = **in
	}
	if in.HighlightMaxAnalyzedOffset != nil {
		in, out := &in.HighlightMaxAnalyzedOffset, &out.HighlightMaxAnalyzedOffset
		*out = new(float64)
		**out = **in
	}
	if in.IncludeTypeName != nil {
		in, out := &in.IncludeTypeName, &out.IncludeTypeName
		*out = new(bool)
		**out = **in
	}
	if in.IndexingSlowlogLevel != nil {
		in, out := &in.IndexingSlowlogLevel, &out.IndexingSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogSource != nil {
		in, out := &in.IndexingSlowlogSource, &out.IndexingSlowlogSource
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexDebug != nil {
		in, out := &in.IndexingSlowlogThresholdIndexDebug, &out.IndexingSlowlogThresholdIndexDebug
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexInfo != nil {
		in, out := &in.IndexingSlowlogThresholdIndexInfo, &out.IndexingSlowlogThresholdIndexInfo
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexTrace != nil {
		in, out := &in.IndexingSlowlogThresholdIndexTrace, &out.IndexingSlowlogThresholdIndexTrace
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexWarn != nil {
		in, out := &in.IndexingSlowlogThresholdIndexWarn, &out.IndexingSlowlogThresholdIndexWarn
		*out = new(string)
		**out = **in
	}
	if in.LoadFixedBitsetFiltersEagerly != nil {
		in, out := &in.LoadFixedBitsetFiltersEagerly, &out.LoadFixedBitsetFiltersEagerly
		*out = new(bool)
		**out = **in
	}
	if in.MappingCoerce != nil {
		in, out := &in.MappingCoerce, &out.MappingCoerce
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.MasterTimeout != nil {
		in, out := &in.MasterTimeout, &out.MasterTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxDocvalueFieldsSearch != nil {
		in, out := &in.MaxDocvalueFieldsSearch, &out.MaxDocvalueFieldsSearch
		*out = new(float64)
		**out = **in
	}
	if in.MaxInnerResultWindow != nil {
		in, out := &in.MaxInnerResultWindow, &out.MaxInnerResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxNgramDiff != nil {
		in, out := &in.MaxNgramDiff, &out.MaxNgramDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxRefreshListeners != nil {
		in, out := &in.MaxRefreshListeners, &out.MaxRefreshListeners
		*out = new(float64)
		**out = **in
	}
	if in.MaxRegexLength != nil {
		in, out := &in.MaxRegexLength, &out.MaxRegexLength
		*out = new(float64)
		**out = **in
	}
	if in.MaxRescoreWindow != nil {
		in, out := &in.MaxRescoreWindow, &out.MaxRescoreWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxResultWindow != nil {
		in, out := &in.MaxResultWindow, &out.MaxResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxScriptFields != nil {
		in, out := &in.MaxScriptFields, &out.MaxScriptFields
		*out = new(float64)
		**out = **in
	}
	if in.MaxShingleDiff != nil {
		in, out := &in.MaxShingleDiff, &out.MaxShingleDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxTermsCount != nil {
		in, out := &in.MaxTermsCount, &out.MaxTermsCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfRoutingShards != nil {
		in, out := &in.NumberOfRoutingShards, &out.NumberOfRoutingShards
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
	if in.QueryDefaultField != nil {
		in, out := &in.QueryDefaultField, &out.QueryDefaultField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(string)
		**out = **in
	}
	if in.RoutingAllocationEnable != nil {
		in, out := &in.RoutingAllocationEnable, &out.RoutingAllocationEnable
		*out = new(string)
		**out = **in
	}
	if in.RoutingPartitionSize != nil {
		in, out := &in.RoutingPartitionSize, &out.RoutingPartitionSize
		*out = new(float64)
		**out = **in
	}
	if in.RoutingRebalanceEnable != nil {
		in, out := &in.RoutingRebalanceEnable, &out.RoutingRebalanceEnable
		*out = new(string)
		**out = **in
	}
	if in.SearchIdleAfter != nil {
		in, out := &in.SearchIdleAfter, &out.SearchIdleAfter
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogLevel != nil {
		in, out := &in.SearchSlowlogLevel, &out.SearchSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchDebug != nil {
		in, out := &in.SearchSlowlogThresholdFetchDebug, &out.SearchSlowlogThresholdFetchDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchInfo != nil {
		in, out := &in.SearchSlowlogThresholdFetchInfo, &out.SearchSlowlogThresholdFetchInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchTrace != nil {
		in, out := &in.SearchSlowlogThresholdFetchTrace, &out.SearchSlowlogThresholdFetchTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchWarn != nil {
		in, out := &in.SearchSlowlogThresholdFetchWarn, &out.SearchSlowlogThresholdFetchWarn
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryDebug != nil {
		in, out := &in.SearchSlowlogThresholdQueryDebug, &out.SearchSlowlogThresholdQueryDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryInfo != nil {
		in, out := &in.SearchSlowlogThresholdQueryInfo, &out.SearchSlowlogThresholdQueryInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryTrace != nil {
		in, out := &in.SearchSlowlogThresholdQueryTrace, &out.SearchSlowlogThresholdQueryTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryWarn != nil {
		in, out := &in.SearchSlowlogThresholdQueryWarn, &out.SearchSlowlogThresholdQueryWarn
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardCheckOnStartup != nil {
		in, out := &in.ShardCheckOnStartup, &out.ShardCheckOnStartup
		*out = new(string)
		**out = **in
	}
	if in.SortField != nil {
		in, out := &in.SortField, &out.SortField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UnassignedNodeLeftDelayedTimeout != nil {
		in, out := &in.UnassignedNodeLeftDelayedTimeout, &out.UnassignedNodeLeftDelayedTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForActiveShards != nil {
		in, out := &in.WaitForActiveShards, &out.WaitForActiveShards
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexInitParameters.
func (in *IndexInitParameters) DeepCopy() *IndexInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycle) DeepCopyInto(out *IndexLifecycle) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycle.
func (in *IndexLifecycle) DeepCopy() *IndexLifecycle {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexLifecycle) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleElasticsearchConnectionInitParameters) DeepCopyInto(out *IndexLifecycleElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleElasticsearchConnectionInitParameters.
func (in *IndexLifecycleElasticsearchConnectionInitParameters) DeepCopy() *IndexLifecycleElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleElasticsearchConnectionObservation) DeepCopyInto(out *IndexLifecycleElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleElasticsearchConnectionObservation.
func (in *IndexLifecycleElasticsearchConnectionObservation) DeepCopy() *IndexLifecycleElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleElasticsearchConnectionParameters) DeepCopyInto(out *IndexLifecycleElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleElasticsearchConnectionParameters.
func (in *IndexLifecycleElasticsearchConnectionParameters) DeepCopy() *IndexLifecycleElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleInitParameters) DeepCopyInto(out *IndexLifecycleInitParameters) {
	*out = *in
	if in.Cold != nil {
		in, out := &in.Cold, &out.Cold
		*out = make([]ColdInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexLifecycleElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Frozen != nil {
		in, out := &in.Frozen, &out.Frozen
		*out = make([]FrozenInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hot != nil {
		in, out := &in.Hot, &out.Hot
		*out = make([]HotInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Warm != nil {
		in, out := &in.Warm, &out.Warm
		*out = make([]WarmInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleInitParameters.
func (in *IndexLifecycleInitParameters) DeepCopy() *IndexLifecycleInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleList) DeepCopyInto(out *IndexLifecycleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IndexLifecycle, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleList.
func (in *IndexLifecycleList) DeepCopy() *IndexLifecycleList {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexLifecycleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleObservation) DeepCopyInto(out *IndexLifecycleObservation) {
	*out = *in
	if in.Cold != nil {
		in, out := &in.Cold, &out.Cold
		*out = make([]ColdObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexLifecycleElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Frozen != nil {
		in, out := &in.Frozen, &out.Frozen
		*out = make([]FrozenObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hot != nil {
		in, out := &in.Hot, &out.Hot
		*out = make([]HotObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.ModifiedDate != nil {
		in, out := &in.ModifiedDate, &out.ModifiedDate
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Warm != nil {
		in, out := &in.Warm, &out.Warm
		*out = make([]WarmObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleObservation.
func (in *IndexLifecycleObservation) DeepCopy() *IndexLifecycleObservation {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleParameters) DeepCopyInto(out *IndexLifecycleParameters) {
	*out = *in
	if in.Cold != nil {
		in, out := &in.Cold, &out.Cold
		*out = make([]ColdParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Delete != nil {
		in, out := &in.Delete, &out.Delete
		*out = make([]DeleteParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexLifecycleElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Frozen != nil {
		in, out := &in.Frozen, &out.Frozen
		*out = make([]FrozenParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hot != nil {
		in, out := &in.Hot, &out.Hot
		*out = make([]HotParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Warm != nil {
		in, out := &in.Warm, &out.Warm
		*out = make([]WarmParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleParameters.
func (in *IndexLifecycleParameters) DeepCopy() *IndexLifecycleParameters {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleSpec) DeepCopyInto(out *IndexLifecycleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleSpec.
func (in *IndexLifecycleSpec) DeepCopy() *IndexLifecycleSpec {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexLifecycleStatus) DeepCopyInto(out *IndexLifecycleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexLifecycleStatus.
func (in *IndexLifecycleStatus) DeepCopy() *IndexLifecycleStatus {
	if in == nil {
		return nil
	}
	out := new(IndexLifecycleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexList) DeepCopyInto(out *IndexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Index, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexList.
func (in *IndexList) DeepCopy() *IndexList {
	if in == nil {
		return nil
	}
	out := new(IndexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexObservation) DeepCopyInto(out *IndexObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]IndexAliasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisAnalyzer != nil {
		in, out := &in.AnalysisAnalyzer, &out.AnalysisAnalyzer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisCharFilter != nil {
		in, out := &in.AnalysisCharFilter, &out.AnalysisCharFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisFilter != nil {
		in, out := &in.AnalysisFilter, &out.AnalysisFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisNormalizer != nil {
		in, out := &in.AnalysisNormalizer, &out.AnalysisNormalizer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisTokenizer != nil {
		in, out := &in.AnalysisTokenizer, &out.AnalysisTokenizer
		*out = new(string)
		**out = **in
	}
	if in.AnalyzeMaxTokenCount != nil {
		in, out := &in.AnalyzeMaxTokenCount, &out.AnalyzeMaxTokenCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoExpandReplicas != nil {
		in, out := &in.AutoExpandReplicas, &out.AutoExpandReplicas
		*out = new(string)
		**out = **in
	}
	if in.BlocksMetadata != nil {
		in, out := &in.BlocksMetadata, &out.BlocksMetadata
		*out = new(bool)
		**out = **in
	}
	if in.BlocksRead != nil {
		in, out := &in.BlocksRead, &out.BlocksRead
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnly != nil {
		in, out := &in.BlocksReadOnly, &out.BlocksReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnlyAllowDelete != nil {
		in, out := &in.BlocksReadOnlyAllowDelete, &out.BlocksReadOnlyAllowDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlocksWrite != nil {
		in, out := &in.BlocksWrite, &out.BlocksWrite
		*out = new(bool)
		**out = **in
	}
	if in.Codec != nil {
		in, out := &in.Codec, &out.Codec
		*out = new(string)
		**out = **in
	}
	if in.DefaultPipeline != nil {
		in, out := &in.DefaultPipeline, &out.DefaultPipeline
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FinalPipeline != nil {
		in, out := &in.FinalPipeline, &out.FinalPipeline
		*out = new(string)
		**out = **in
	}
	if in.GcDeletes != nil {
		in, out := &in.GcDeletes, &out.GcDeletes
		*out = new(string)
		**out = **in
	}
	if in.HighlightMaxAnalyzedOffset != nil {
		in, out := &in.HighlightMaxAnalyzedOffset, &out.HighlightMaxAnalyzedOffset
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeTypeName != nil {
		in, out := &in.IncludeTypeName, &out.IncludeTypeName
		*out = new(bool)
		**out = **in
	}
	if in.IndexingSlowlogLevel != nil {
		in, out := &in.IndexingSlowlogLevel, &out.IndexingSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogSource != nil {
		in, out := &in.IndexingSlowlogSource, &out.IndexingSlowlogSource
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexDebug != nil {
		in, out := &in.IndexingSlowlogThresholdIndexDebug, &out.IndexingSlowlogThresholdIndexDebug
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexInfo != nil {
		in, out := &in.IndexingSlowlogThresholdIndexInfo, &out.IndexingSlowlogThresholdIndexInfo
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexTrace != nil {
		in, out := &in.IndexingSlowlogThresholdIndexTrace, &out.IndexingSlowlogThresholdIndexTrace
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexWarn != nil {
		in, out := &in.IndexingSlowlogThresholdIndexWarn, &out.IndexingSlowlogThresholdIndexWarn
		*out = new(string)
		**out = **in
	}
	if in.LoadFixedBitsetFiltersEagerly != nil {
		in, out := &in.LoadFixedBitsetFiltersEagerly, &out.LoadFixedBitsetFiltersEagerly
		*out = new(bool)
		**out = **in
	}
	if in.MappingCoerce != nil {
		in, out := &in.MappingCoerce, &out.MappingCoerce
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.MasterTimeout != nil {
		in, out := &in.MasterTimeout, &out.MasterTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxDocvalueFieldsSearch != nil {
		in, out := &in.MaxDocvalueFieldsSearch, &out.MaxDocvalueFieldsSearch
		*out = new(float64)
		**out = **in
	}
	if in.MaxInnerResultWindow != nil {
		in, out := &in.MaxInnerResultWindow, &out.MaxInnerResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxNgramDiff != nil {
		in, out := &in.MaxNgramDiff, &out.MaxNgramDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxRefreshListeners != nil {
		in, out := &in.MaxRefreshListeners, &out.MaxRefreshListeners
		*out = new(float64)
		**out = **in
	}
	if in.MaxRegexLength != nil {
		in, out := &in.MaxRegexLength, &out.MaxRegexLength
		*out = new(float64)
		**out = **in
	}
	if in.MaxRescoreWindow != nil {
		in, out := &in.MaxRescoreWindow, &out.MaxRescoreWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxResultWindow != nil {
		in, out := &in.MaxResultWindow, &out.MaxResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxScriptFields != nil {
		in, out := &in.MaxScriptFields, &out.MaxScriptFields
		*out = new(float64)
		**out = **in
	}
	if in.MaxShingleDiff != nil {
		in, out := &in.MaxShingleDiff, &out.MaxShingleDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxTermsCount != nil {
		in, out := &in.MaxTermsCount, &out.MaxTermsCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfRoutingShards != nil {
		in, out := &in.NumberOfRoutingShards, &out.NumberOfRoutingShards
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
	if in.QueryDefaultField != nil {
		in, out := &in.QueryDefaultField, &out.QueryDefaultField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(string)
		**out = **in
	}
	if in.RoutingAllocationEnable != nil {
		in, out := &in.RoutingAllocationEnable, &out.RoutingAllocationEnable
		*out = new(string)
		**out = **in
	}
	if in.RoutingPartitionSize != nil {
		in, out := &in.RoutingPartitionSize, &out.RoutingPartitionSize
		*out = new(float64)
		**out = **in
	}
	if in.RoutingRebalanceEnable != nil {
		in, out := &in.RoutingRebalanceEnable, &out.RoutingRebalanceEnable
		*out = new(string)
		**out = **in
	}
	if in.SearchIdleAfter != nil {
		in, out := &in.SearchIdleAfter, &out.SearchIdleAfter
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogLevel != nil {
		in, out := &in.SearchSlowlogLevel, &out.SearchSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchDebug != nil {
		in, out := &in.SearchSlowlogThresholdFetchDebug, &out.SearchSlowlogThresholdFetchDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchInfo != nil {
		in, out := &in.SearchSlowlogThresholdFetchInfo, &out.SearchSlowlogThresholdFetchInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchTrace != nil {
		in, out := &in.SearchSlowlogThresholdFetchTrace, &out.SearchSlowlogThresholdFetchTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchWarn != nil {
		in, out := &in.SearchSlowlogThresholdFetchWarn, &out.SearchSlowlogThresholdFetchWarn
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryDebug != nil {
		in, out := &in.SearchSlowlogThresholdQueryDebug, &out.SearchSlowlogThresholdQueryDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryInfo != nil {
		in, out := &in.SearchSlowlogThresholdQueryInfo, &out.SearchSlowlogThresholdQueryInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryTrace != nil {
		in, out := &in.SearchSlowlogThresholdQueryTrace, &out.SearchSlowlogThresholdQueryTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryWarn != nil {
		in, out := &in.SearchSlowlogThresholdQueryWarn, &out.SearchSlowlogThresholdQueryWarn
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SettingsRaw != nil {
		in, out := &in.SettingsRaw, &out.SettingsRaw
		*out = new(string)
		**out = **in
	}
	if in.ShardCheckOnStartup != nil {
		in, out := &in.ShardCheckOnStartup, &out.ShardCheckOnStartup
		*out = new(string)
		**out = **in
	}
	if in.SortField != nil {
		in, out := &in.SortField, &out.SortField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UnassignedNodeLeftDelayedTimeout != nil {
		in, out := &in.UnassignedNodeLeftDelayedTimeout, &out.UnassignedNodeLeftDelayedTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForActiveShards != nil {
		in, out := &in.WaitForActiveShards, &out.WaitForActiveShards
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexObservation.
func (in *IndexObservation) DeepCopy() *IndexObservation {
	if in == nil {
		return nil
	}
	out := new(IndexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexParameters) DeepCopyInto(out *IndexParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]IndexAliasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnalysisAnalyzer != nil {
		in, out := &in.AnalysisAnalyzer, &out.AnalysisAnalyzer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisCharFilter != nil {
		in, out := &in.AnalysisCharFilter, &out.AnalysisCharFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisFilter != nil {
		in, out := &in.AnalysisFilter, &out.AnalysisFilter
		*out = new(string)
		**out = **in
	}
	if in.AnalysisNormalizer != nil {
		in, out := &in.AnalysisNormalizer, &out.AnalysisNormalizer
		*out = new(string)
		**out = **in
	}
	if in.AnalysisTokenizer != nil {
		in, out := &in.AnalysisTokenizer, &out.AnalysisTokenizer
		*out = new(string)
		**out = **in
	}
	if in.AnalyzeMaxTokenCount != nil {
		in, out := &in.AnalyzeMaxTokenCount, &out.AnalyzeMaxTokenCount
		*out = new(float64)
		**out = **in
	}
	if in.AutoExpandReplicas != nil {
		in, out := &in.AutoExpandReplicas, &out.AutoExpandReplicas
		*out = new(string)
		**out = **in
	}
	if in.BlocksMetadata != nil {
		in, out := &in.BlocksMetadata, &out.BlocksMetadata
		*out = new(bool)
		**out = **in
	}
	if in.BlocksRead != nil {
		in, out := &in.BlocksRead, &out.BlocksRead
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnly != nil {
		in, out := &in.BlocksReadOnly, &out.BlocksReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.BlocksReadOnlyAllowDelete != nil {
		in, out := &in.BlocksReadOnlyAllowDelete, &out.BlocksReadOnlyAllowDelete
		*out = new(bool)
		**out = **in
	}
	if in.BlocksWrite != nil {
		in, out := &in.BlocksWrite, &out.BlocksWrite
		*out = new(bool)
		**out = **in
	}
	if in.Codec != nil {
		in, out := &in.Codec, &out.Codec
		*out = new(string)
		**out = **in
	}
	if in.DefaultPipeline != nil {
		in, out := &in.DefaultPipeline, &out.DefaultPipeline
		*out = new(string)
		**out = **in
	}
	if in.DeletionProtection != nil {
		in, out := &in.DeletionProtection, &out.DeletionProtection
		*out = new(bool)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FinalPipeline != nil {
		in, out := &in.FinalPipeline, &out.FinalPipeline
		*out = new(string)
		**out = **in
	}
	if in.GcDeletes != nil {
		in, out := &in.GcDeletes, &out.GcDeletes
		*out = new(string)
		**out = **in
	}
	if in.HighlightMaxAnalyzedOffset != nil {
		in, out := &in.HighlightMaxAnalyzedOffset, &out.HighlightMaxAnalyzedOffset
		*out = new(float64)
		**out = **in
	}
	if in.IncludeTypeName != nil {
		in, out := &in.IncludeTypeName, &out.IncludeTypeName
		*out = new(bool)
		**out = **in
	}
	if in.IndexingSlowlogLevel != nil {
		in, out := &in.IndexingSlowlogLevel, &out.IndexingSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogSource != nil {
		in, out := &in.IndexingSlowlogSource, &out.IndexingSlowlogSource
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexDebug != nil {
		in, out := &in.IndexingSlowlogThresholdIndexDebug, &out.IndexingSlowlogThresholdIndexDebug
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexInfo != nil {
		in, out := &in.IndexingSlowlogThresholdIndexInfo, &out.IndexingSlowlogThresholdIndexInfo
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexTrace != nil {
		in, out := &in.IndexingSlowlogThresholdIndexTrace, &out.IndexingSlowlogThresholdIndexTrace
		*out = new(string)
		**out = **in
	}
	if in.IndexingSlowlogThresholdIndexWarn != nil {
		in, out := &in.IndexingSlowlogThresholdIndexWarn, &out.IndexingSlowlogThresholdIndexWarn
		*out = new(string)
		**out = **in
	}
	if in.LoadFixedBitsetFiltersEagerly != nil {
		in, out := &in.LoadFixedBitsetFiltersEagerly, &out.LoadFixedBitsetFiltersEagerly
		*out = new(bool)
		**out = **in
	}
	if in.MappingCoerce != nil {
		in, out := &in.MappingCoerce, &out.MappingCoerce
		*out = new(bool)
		**out = **in
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.MasterTimeout != nil {
		in, out := &in.MasterTimeout, &out.MasterTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxDocvalueFieldsSearch != nil {
		in, out := &in.MaxDocvalueFieldsSearch, &out.MaxDocvalueFieldsSearch
		*out = new(float64)
		**out = **in
	}
	if in.MaxInnerResultWindow != nil {
		in, out := &in.MaxInnerResultWindow, &out.MaxInnerResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxNgramDiff != nil {
		in, out := &in.MaxNgramDiff, &out.MaxNgramDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxRefreshListeners != nil {
		in, out := &in.MaxRefreshListeners, &out.MaxRefreshListeners
		*out = new(float64)
		**out = **in
	}
	if in.MaxRegexLength != nil {
		in, out := &in.MaxRegexLength, &out.MaxRegexLength
		*out = new(float64)
		**out = **in
	}
	if in.MaxRescoreWindow != nil {
		in, out := &in.MaxRescoreWindow, &out.MaxRescoreWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxResultWindow != nil {
		in, out := &in.MaxResultWindow, &out.MaxResultWindow
		*out = new(float64)
		**out = **in
	}
	if in.MaxScriptFields != nil {
		in, out := &in.MaxScriptFields, &out.MaxScriptFields
		*out = new(float64)
		**out = **in
	}
	if in.MaxShingleDiff != nil {
		in, out := &in.MaxShingleDiff, &out.MaxShingleDiff
		*out = new(float64)
		**out = **in
	}
	if in.MaxTermsCount != nil {
		in, out := &in.MaxTermsCount, &out.MaxTermsCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfRoutingShards != nil {
		in, out := &in.NumberOfRoutingShards, &out.NumberOfRoutingShards
		*out = new(float64)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
	if in.QueryDefaultField != nil {
		in, out := &in.QueryDefaultField, &out.QueryDefaultField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshInterval != nil {
		in, out := &in.RefreshInterval, &out.RefreshInterval
		*out = new(string)
		**out = **in
	}
	if in.RoutingAllocationEnable != nil {
		in, out := &in.RoutingAllocationEnable, &out.RoutingAllocationEnable
		*out = new(string)
		**out = **in
	}
	if in.RoutingPartitionSize != nil {
		in, out := &in.RoutingPartitionSize, &out.RoutingPartitionSize
		*out = new(float64)
		**out = **in
	}
	if in.RoutingRebalanceEnable != nil {
		in, out := &in.RoutingRebalanceEnable, &out.RoutingRebalanceEnable
		*out = new(string)
		**out = **in
	}
	if in.SearchIdleAfter != nil {
		in, out := &in.SearchIdleAfter, &out.SearchIdleAfter
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogLevel != nil {
		in, out := &in.SearchSlowlogLevel, &out.SearchSlowlogLevel
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchDebug != nil {
		in, out := &in.SearchSlowlogThresholdFetchDebug, &out.SearchSlowlogThresholdFetchDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchInfo != nil {
		in, out := &in.SearchSlowlogThresholdFetchInfo, &out.SearchSlowlogThresholdFetchInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchTrace != nil {
		in, out := &in.SearchSlowlogThresholdFetchTrace, &out.SearchSlowlogThresholdFetchTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdFetchWarn != nil {
		in, out := &in.SearchSlowlogThresholdFetchWarn, &out.SearchSlowlogThresholdFetchWarn
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryDebug != nil {
		in, out := &in.SearchSlowlogThresholdQueryDebug, &out.SearchSlowlogThresholdQueryDebug
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryInfo != nil {
		in, out := &in.SearchSlowlogThresholdQueryInfo, &out.SearchSlowlogThresholdQueryInfo
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryTrace != nil {
		in, out := &in.SearchSlowlogThresholdQueryTrace, &out.SearchSlowlogThresholdQueryTrace
		*out = new(string)
		**out = **in
	}
	if in.SearchSlowlogThresholdQueryWarn != nil {
		in, out := &in.SearchSlowlogThresholdQueryWarn, &out.SearchSlowlogThresholdQueryWarn
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ShardCheckOnStartup != nil {
		in, out := &in.ShardCheckOnStartup, &out.ShardCheckOnStartup
		*out = new(string)
		**out = **in
	}
	if in.SortField != nil {
		in, out := &in.SortField, &out.SortField
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SortOrder != nil {
		in, out := &in.SortOrder, &out.SortOrder
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.UnassignedNodeLeftDelayedTimeout != nil {
		in, out := &in.UnassignedNodeLeftDelayedTimeout, &out.UnassignedNodeLeftDelayedTimeout
		*out = new(string)
		**out = **in
	}
	if in.WaitForActiveShards != nil {
		in, out := &in.WaitForActiveShards, &out.WaitForActiveShards
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexParameters.
func (in *IndexParameters) DeepCopy() *IndexParameters {
	if in == nil {
		return nil
	}
	out := new(IndexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexSpec) DeepCopyInto(out *IndexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexSpec.
func (in *IndexSpec) DeepCopy() *IndexSpec {
	if in == nil {
		return nil
	}
	out := new(IndexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexStatus) DeepCopyInto(out *IndexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexStatus.
func (in *IndexStatus) DeepCopy() *IndexStatus {
	if in == nil {
		return nil
	}
	out := new(IndexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplate) DeepCopyInto(out *IndexTemplate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplate.
func (in *IndexTemplate) DeepCopy() *IndexTemplate {
	if in == nil {
		return nil
	}
	out := new(IndexTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexTemplate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateDataStreamInitParameters) DeepCopyInto(out *IndexTemplateDataStreamInitParameters) {
	*out = *in
	if in.AllowCustomRouting != nil {
		in, out := &in.AllowCustomRouting, &out.AllowCustomRouting
		*out = new(bool)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateDataStreamInitParameters.
func (in *IndexTemplateDataStreamInitParameters) DeepCopy() *IndexTemplateDataStreamInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateDataStreamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateDataStreamObservation) DeepCopyInto(out *IndexTemplateDataStreamObservation) {
	*out = *in
	if in.AllowCustomRouting != nil {
		in, out := &in.AllowCustomRouting, &out.AllowCustomRouting
		*out = new(bool)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateDataStreamObservation.
func (in *IndexTemplateDataStreamObservation) DeepCopy() *IndexTemplateDataStreamObservation {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateDataStreamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateDataStreamParameters) DeepCopyInto(out *IndexTemplateDataStreamParameters) {
	*out = *in
	if in.AllowCustomRouting != nil {
		in, out := &in.AllowCustomRouting, &out.AllowCustomRouting
		*out = new(bool)
		**out = **in
	}
	if in.Hidden != nil {
		in, out := &in.Hidden, &out.Hidden
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateDataStreamParameters.
func (in *IndexTemplateDataStreamParameters) DeepCopy() *IndexTemplateDataStreamParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateDataStreamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateElasticsearchConnectionInitParameters) DeepCopyInto(out *IndexTemplateElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateElasticsearchConnectionInitParameters.
func (in *IndexTemplateElasticsearchConnectionInitParameters) DeepCopy() *IndexTemplateElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateElasticsearchConnectionObservation) DeepCopyInto(out *IndexTemplateElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateElasticsearchConnectionObservation.
func (in *IndexTemplateElasticsearchConnectionObservation) DeepCopy() *IndexTemplateElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateElasticsearchConnectionParameters) DeepCopyInto(out *IndexTemplateElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateElasticsearchConnectionParameters.
func (in *IndexTemplateElasticsearchConnectionParameters) DeepCopy() *IndexTemplateElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateInitParameters) DeepCopyInto(out *IndexTemplateInitParameters) {
	*out = *in
	if in.ComposedOf != nil {
		in, out := &in.ComposedOf, &out.ComposedOf
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataStream != nil {
		in, out := &in.DataStream, &out.DataStream
		*out = make([]IndexTemplateDataStreamInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexTemplateElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexPatterns != nil {
		in, out := &in.IndexPatterns, &out.IndexPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]IndexTemplateTemplateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateInitParameters.
func (in *IndexTemplateInitParameters) DeepCopy() *IndexTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateList) DeepCopyInto(out *IndexTemplateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IndexTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateList.
func (in *IndexTemplateList) DeepCopy() *IndexTemplateList {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IndexTemplateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateObservation) DeepCopyInto(out *IndexTemplateObservation) {
	*out = *in
	if in.ComposedOf != nil {
		in, out := &in.ComposedOf, &out.ComposedOf
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataStream != nil {
		in, out := &in.DataStream, &out.DataStream
		*out = make([]IndexTemplateDataStreamObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexTemplateElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IndexPatterns != nil {
		in, out := &in.IndexPatterns, &out.IndexPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]IndexTemplateTemplateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateObservation.
func (in *IndexTemplateObservation) DeepCopy() *IndexTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateParameters) DeepCopyInto(out *IndexTemplateParameters) {
	*out = *in
	if in.ComposedOf != nil {
		in, out := &in.ComposedOf, &out.ComposedOf
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DataStream != nil {
		in, out := &in.DataStream, &out.DataStream
		*out = make([]IndexTemplateDataStreamParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IndexTemplateElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IndexPatterns != nil {
		in, out := &in.IndexPatterns, &out.IndexPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Template != nil {
		in, out := &in.Template, &out.Template
		*out = make([]IndexTemplateTemplateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateParameters.
func (in *IndexTemplateParameters) DeepCopy() *IndexTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateSpec) DeepCopyInto(out *IndexTemplateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateSpec.
func (in *IndexTemplateSpec) DeepCopy() *IndexTemplateSpec {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateStatus) DeepCopyInto(out *IndexTemplateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateStatus.
func (in *IndexTemplateStatus) DeepCopy() *IndexTemplateStatus {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateTemplateInitParameters) DeepCopyInto(out *IndexTemplateTemplateInitParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]TemplateAliasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateTemplateInitParameters.
func (in *IndexTemplateTemplateInitParameters) DeepCopy() *IndexTemplateTemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateTemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateTemplateObservation) DeepCopyInto(out *IndexTemplateTemplateObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]TemplateAliasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateTemplateObservation.
func (in *IndexTemplateTemplateObservation) DeepCopy() *IndexTemplateTemplateObservation {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateTemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndexTemplateTemplateParameters) DeepCopyInto(out *IndexTemplateTemplateParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]TemplateAliasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndexTemplateTemplateParameters.
func (in *IndexTemplateTemplateParameters) DeepCopy() *IndexTemplateTemplateParameters {
	if in == nil {
		return nil
	}
	out := new(IndexTemplateTemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndicesInitParameters) DeepCopyInto(out *IndicesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndicesInitParameters.
func (in *IndicesInitParameters) DeepCopy() *IndicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IndicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndicesObservation) DeepCopyInto(out *IndicesObservation) {
	*out = *in
	if in.IndexName != nil {
		in, out := &in.IndexName, &out.IndexName
		*out = new(string)
		**out = **in
	}
	if in.IndexUUID != nil {
		in, out := &in.IndexUUID, &out.IndexUUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndicesObservation.
func (in *IndicesObservation) DeepCopy() *IndicesObservation {
	if in == nil {
		return nil
	}
	out := new(IndicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IndicesParameters) DeepCopyInto(out *IndicesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IndicesParameters.
func (in *IndicesParameters) DeepCopy() *IndicesParameters {
	if in == nil {
		return nil
	}
	out := new(IndicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipeline) DeepCopyInto(out *IngestPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipeline.
func (in *IngestPipeline) DeepCopy() *IngestPipeline {
	if in == nil {
		return nil
	}
	out := new(IngestPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IngestPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineElasticsearchConnectionInitParameters) DeepCopyInto(out *IngestPipelineElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineElasticsearchConnectionInitParameters.
func (in *IngestPipelineElasticsearchConnectionInitParameters) DeepCopy() *IngestPipelineElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineElasticsearchConnectionObservation) DeepCopyInto(out *IngestPipelineElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineElasticsearchConnectionObservation.
func (in *IngestPipelineElasticsearchConnectionObservation) DeepCopy() *IngestPipelineElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineElasticsearchConnectionParameters) DeepCopyInto(out *IngestPipelineElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineElasticsearchConnectionParameters.
func (in *IngestPipelineElasticsearchConnectionParameters) DeepCopy() *IngestPipelineElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineInitParameters) DeepCopyInto(out *IngestPipelineInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IngestPipelineElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineInitParameters.
func (in *IngestPipelineInitParameters) DeepCopy() *IngestPipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineList) DeepCopyInto(out *IngestPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IngestPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineList.
func (in *IngestPipelineList) DeepCopy() *IngestPipelineList {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IngestPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineObservation) DeepCopyInto(out *IngestPipelineObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IngestPipelineElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineObservation.
func (in *IngestPipelineObservation) DeepCopy() *IngestPipelineObservation {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineParameters) DeepCopyInto(out *IngestPipelineParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]IngestPipelineElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OnFailure != nil {
		in, out := &in.OnFailure, &out.OnFailure
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Processors != nil {
		in, out := &in.Processors, &out.Processors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineParameters.
func (in *IngestPipelineParameters) DeepCopy() *IngestPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineSpec) DeepCopyInto(out *IngestPipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineSpec.
func (in *IngestPipelineSpec) DeepCopy() *IngestPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngestPipelineStatus) DeepCopyInto(out *IngestPipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngestPipelineStatus.
func (in *IngestPipelineStatus) DeepCopy() *IngestPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(IngestPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipeline) DeepCopyInto(out *LogstashPipeline) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipeline.
func (in *LogstashPipeline) DeepCopy() *LogstashPipeline {
	if in == nil {
		return nil
	}
	out := new(LogstashPipeline)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogstashPipeline) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineElasticsearchConnectionInitParameters) DeepCopyInto(out *LogstashPipelineElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineElasticsearchConnectionInitParameters.
func (in *LogstashPipelineElasticsearchConnectionInitParameters) DeepCopy() *LogstashPipelineElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineElasticsearchConnectionObservation) DeepCopyInto(out *LogstashPipelineElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineElasticsearchConnectionObservation.
func (in *LogstashPipelineElasticsearchConnectionObservation) DeepCopy() *LogstashPipelineElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineElasticsearchConnectionParameters) DeepCopyInto(out *LogstashPipelineElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineElasticsearchConnectionParameters.
func (in *LogstashPipelineElasticsearchConnectionParameters) DeepCopy() *LogstashPipelineElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineInitParameters) DeepCopyInto(out *LogstashPipelineInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]LogstashPipelineElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.PipelineBatchDelay != nil {
		in, out := &in.PipelineBatchDelay, &out.PipelineBatchDelay
		*out = new(float64)
		**out = **in
	}
	if in.PipelineBatchSize != nil {
		in, out := &in.PipelineBatchSize, &out.PipelineBatchSize
		*out = new(float64)
		**out = **in
	}
	if in.PipelineEcsCompatibility != nil {
		in, out := &in.PipelineEcsCompatibility, &out.PipelineEcsCompatibility
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineMetadata != nil {
		in, out := &in.PipelineMetadata, &out.PipelineMetadata
		*out = new(string)
		**out = **in
	}
	if in.PipelineOrdered != nil {
		in, out := &in.PipelineOrdered, &out.PipelineOrdered
		*out = new(string)
		**out = **in
	}
	if in.PipelinePluginClassloaders != nil {
		in, out := &in.PipelinePluginClassloaders, &out.PipelinePluginClassloaders
		*out = new(bool)
		**out = **in
	}
	if in.PipelineUnsafeShutdown != nil {
		in, out := &in.PipelineUnsafeShutdown, &out.PipelineUnsafeShutdown
		*out = new(bool)
		**out = **in
	}
	if in.PipelineWorkers != nil {
		in, out := &in.PipelineWorkers, &out.PipelineWorkers
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointAcks != nil {
		in, out := &in.QueueCheckpointAcks, &out.QueueCheckpointAcks
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointRetry != nil {
		in, out := &in.QueueCheckpointRetry, &out.QueueCheckpointRetry
		*out = new(bool)
		**out = **in
	}
	if in.QueueCheckpointWrites != nil {
		in, out := &in.QueueCheckpointWrites, &out.QueueCheckpointWrites
		*out = new(float64)
		**out = **in
	}
	if in.QueueDrain != nil {
		in, out := &in.QueueDrain, &out.QueueDrain
		*out = new(bool)
		**out = **in
	}
	if in.QueueMaxBytes != nil {
		in, out := &in.QueueMaxBytes, &out.QueueMaxBytes
		*out = new(string)
		**out = **in
	}
	if in.QueueMaxEvents != nil {
		in, out := &in.QueueMaxEvents, &out.QueueMaxEvents
		*out = new(float64)
		**out = **in
	}
	if in.QueuePageCapacity != nil {
		in, out := &in.QueuePageCapacity, &out.QueuePageCapacity
		*out = new(string)
		**out = **in
	}
	if in.QueueType != nil {
		in, out := &in.QueueType, &out.QueueType
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineInitParameters.
func (in *LogstashPipelineInitParameters) DeepCopy() *LogstashPipelineInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineList) DeepCopyInto(out *LogstashPipelineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogstashPipeline, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineList.
func (in *LogstashPipelineList) DeepCopy() *LogstashPipelineList {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogstashPipelineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineObservation) DeepCopyInto(out *LogstashPipelineObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]LogstashPipelineElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastModified != nil {
		in, out := &in.LastModified, &out.LastModified
		*out = new(string)
		**out = **in
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.PipelineBatchDelay != nil {
		in, out := &in.PipelineBatchDelay, &out.PipelineBatchDelay
		*out = new(float64)
		**out = **in
	}
	if in.PipelineBatchSize != nil {
		in, out := &in.PipelineBatchSize, &out.PipelineBatchSize
		*out = new(float64)
		**out = **in
	}
	if in.PipelineEcsCompatibility != nil {
		in, out := &in.PipelineEcsCompatibility, &out.PipelineEcsCompatibility
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineMetadata != nil {
		in, out := &in.PipelineMetadata, &out.PipelineMetadata
		*out = new(string)
		**out = **in
	}
	if in.PipelineOrdered != nil {
		in, out := &in.PipelineOrdered, &out.PipelineOrdered
		*out = new(string)
		**out = **in
	}
	if in.PipelinePluginClassloaders != nil {
		in, out := &in.PipelinePluginClassloaders, &out.PipelinePluginClassloaders
		*out = new(bool)
		**out = **in
	}
	if in.PipelineUnsafeShutdown != nil {
		in, out := &in.PipelineUnsafeShutdown, &out.PipelineUnsafeShutdown
		*out = new(bool)
		**out = **in
	}
	if in.PipelineWorkers != nil {
		in, out := &in.PipelineWorkers, &out.PipelineWorkers
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointAcks != nil {
		in, out := &in.QueueCheckpointAcks, &out.QueueCheckpointAcks
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointRetry != nil {
		in, out := &in.QueueCheckpointRetry, &out.QueueCheckpointRetry
		*out = new(bool)
		**out = **in
	}
	if in.QueueCheckpointWrites != nil {
		in, out := &in.QueueCheckpointWrites, &out.QueueCheckpointWrites
		*out = new(float64)
		**out = **in
	}
	if in.QueueDrain != nil {
		in, out := &in.QueueDrain, &out.QueueDrain
		*out = new(bool)
		**out = **in
	}
	if in.QueueMaxBytes != nil {
		in, out := &in.QueueMaxBytes, &out.QueueMaxBytes
		*out = new(string)
		**out = **in
	}
	if in.QueueMaxEvents != nil {
		in, out := &in.QueueMaxEvents, &out.QueueMaxEvents
		*out = new(float64)
		**out = **in
	}
	if in.QueuePageCapacity != nil {
		in, out := &in.QueuePageCapacity, &out.QueuePageCapacity
		*out = new(string)
		**out = **in
	}
	if in.QueueType != nil {
		in, out := &in.QueueType, &out.QueueType
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineObservation.
func (in *LogstashPipelineObservation) DeepCopy() *LogstashPipelineObservation {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineParameters) DeepCopyInto(out *LogstashPipelineParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]LogstashPipelineElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Pipeline != nil {
		in, out := &in.Pipeline, &out.Pipeline
		*out = new(string)
		**out = **in
	}
	if in.PipelineBatchDelay != nil {
		in, out := &in.PipelineBatchDelay, &out.PipelineBatchDelay
		*out = new(float64)
		**out = **in
	}
	if in.PipelineBatchSize != nil {
		in, out := &in.PipelineBatchSize, &out.PipelineBatchSize
		*out = new(float64)
		**out = **in
	}
	if in.PipelineEcsCompatibility != nil {
		in, out := &in.PipelineEcsCompatibility, &out.PipelineEcsCompatibility
		*out = new(string)
		**out = **in
	}
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.PipelineMetadata != nil {
		in, out := &in.PipelineMetadata, &out.PipelineMetadata
		*out = new(string)
		**out = **in
	}
	if in.PipelineOrdered != nil {
		in, out := &in.PipelineOrdered, &out.PipelineOrdered
		*out = new(string)
		**out = **in
	}
	if in.PipelinePluginClassloaders != nil {
		in, out := &in.PipelinePluginClassloaders, &out.PipelinePluginClassloaders
		*out = new(bool)
		**out = **in
	}
	if in.PipelineUnsafeShutdown != nil {
		in, out := &in.PipelineUnsafeShutdown, &out.PipelineUnsafeShutdown
		*out = new(bool)
		**out = **in
	}
	if in.PipelineWorkers != nil {
		in, out := &in.PipelineWorkers, &out.PipelineWorkers
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointAcks != nil {
		in, out := &in.QueueCheckpointAcks, &out.QueueCheckpointAcks
		*out = new(float64)
		**out = **in
	}
	if in.QueueCheckpointRetry != nil {
		in, out := &in.QueueCheckpointRetry, &out.QueueCheckpointRetry
		*out = new(bool)
		**out = **in
	}
	if in.QueueCheckpointWrites != nil {
		in, out := &in.QueueCheckpointWrites, &out.QueueCheckpointWrites
		*out = new(float64)
		**out = **in
	}
	if in.QueueDrain != nil {
		in, out := &in.QueueDrain, &out.QueueDrain
		*out = new(bool)
		**out = **in
	}
	if in.QueueMaxBytes != nil {
		in, out := &in.QueueMaxBytes, &out.QueueMaxBytes
		*out = new(string)
		**out = **in
	}
	if in.QueueMaxEvents != nil {
		in, out := &in.QueueMaxEvents, &out.QueueMaxEvents
		*out = new(float64)
		**out = **in
	}
	if in.QueuePageCapacity != nil {
		in, out := &in.QueuePageCapacity, &out.QueuePageCapacity
		*out = new(string)
		**out = **in
	}
	if in.QueueType != nil {
		in, out := &in.QueueType, &out.QueueType
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineParameters.
func (in *LogstashPipelineParameters) DeepCopy() *LogstashPipelineParameters {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineSpec) DeepCopyInto(out *LogstashPipelineSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineSpec.
func (in *LogstashPipelineSpec) DeepCopy() *LogstashPipelineSpec {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogstashPipelineStatus) DeepCopyInto(out *LogstashPipelineStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogstashPipelineStatus.
func (in *LogstashPipelineStatus) DeepCopy() *LogstashPipelineStatus {
	if in == nil {
		return nil
	}
	out := new(LogstashPipelineStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrateInitParameters) DeepCopyInto(out *MigrateInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrateInitParameters.
func (in *MigrateInitParameters) DeepCopy() *MigrateInitParameters {
	if in == nil {
		return nil
	}
	out := new(MigrateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrateObservation) DeepCopyInto(out *MigrateObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrateObservation.
func (in *MigrateObservation) DeepCopy() *MigrateObservation {
	if in == nil {
		return nil
	}
	out := new(MigrateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MigrateParameters) DeepCopyInto(out *MigrateParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MigrateParameters.
func (in *MigrateParameters) DeepCopy() *MigrateParameters {
	if in == nil {
		return nil
	}
	out := new(MigrateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentInitParameters) DeepCopyInto(out *PersistentInitParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentInitParameters.
func (in *PersistentInitParameters) DeepCopy() *PersistentInitParameters {
	if in == nil {
		return nil
	}
	out := new(PersistentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentObservation) DeepCopyInto(out *PersistentObservation) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentObservation.
func (in *PersistentObservation) DeepCopy() *PersistentObservation {
	if in == nil {
		return nil
	}
	out := new(PersistentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PersistentParameters) DeepCopyInto(out *PersistentParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PersistentParameters.
func (in *PersistentParameters) DeepCopy() *PersistentParameters {
	if in == nil {
		return nil
	}
	out := new(PersistentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadonlyInitParameters) DeepCopyInto(out *ReadonlyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadonlyInitParameters.
func (in *ReadonlyInitParameters) DeepCopy() *ReadonlyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReadonlyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadonlyObservation) DeepCopyInto(out *ReadonlyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadonlyObservation.
func (in *ReadonlyObservation) DeepCopy() *ReadonlyObservation {
	if in == nil {
		return nil
	}
	out := new(ReadonlyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReadonlyParameters) DeepCopyInto(out *ReadonlyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReadonlyParameters.
func (in *ReadonlyParameters) DeepCopy() *ReadonlyParameters {
	if in == nil {
		return nil
	}
	out := new(ReadonlyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyInitParameters) DeepCopyInto(out *RetentionPolicyInitParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]TimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyInitParameters.
func (in *RetentionPolicyInitParameters) DeepCopy() *RetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyObservation) DeepCopyInto(out *RetentionPolicyObservation) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]TimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyObservation.
func (in *RetentionPolicyObservation) DeepCopy() *RetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RetentionPolicyParameters) DeepCopyInto(out *RetentionPolicyParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]TimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RetentionPolicyParameters.
func (in *RetentionPolicyParameters) DeepCopy() *RetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(RetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloverInitParameters) DeepCopyInto(out *RolloverInitParameters) {
	*out = *in
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxDocs != nil {
		in, out := &in.MaxDocs, &out.MaxDocs
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.MinDocs != nil {
		in, out := &in.MinDocs, &out.MinDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardDocs != nil {
		in, out := &in.MinPrimaryShardDocs, &out.MinPrimaryShardDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardSize != nil {
		in, out := &in.MinPrimaryShardSize, &out.MinPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloverInitParameters.
func (in *RolloverInitParameters) DeepCopy() *RolloverInitParameters {
	if in == nil {
		return nil
	}
	out := new(RolloverInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloverObservation) DeepCopyInto(out *RolloverObservation) {
	*out = *in
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxDocs != nil {
		in, out := &in.MaxDocs, &out.MaxDocs
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.MinDocs != nil {
		in, out := &in.MinDocs, &out.MinDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardDocs != nil {
		in, out := &in.MinPrimaryShardDocs, &out.MinPrimaryShardDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardSize != nil {
		in, out := &in.MinPrimaryShardSize, &out.MinPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloverObservation.
func (in *RolloverObservation) DeepCopy() *RolloverObservation {
	if in == nil {
		return nil
	}
	out := new(RolloverObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RolloverParameters) DeepCopyInto(out *RolloverParameters) {
	*out = *in
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
	if in.MaxDocs != nil {
		in, out := &in.MaxDocs, &out.MaxDocs
		*out = new(float64)
		**out = **in
	}
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MaxSize != nil {
		in, out := &in.MaxSize, &out.MaxSize
		*out = new(string)
		**out = **in
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.MinDocs != nil {
		in, out := &in.MinDocs, &out.MinDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardDocs != nil {
		in, out := &in.MinPrimaryShardDocs, &out.MinPrimaryShardDocs
		*out = new(float64)
		**out = **in
	}
	if in.MinPrimaryShardSize != nil {
		in, out := &in.MinPrimaryShardSize, &out.MinPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.MinSize != nil {
		in, out := &in.MinSize, &out.MinSize
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RolloverParameters.
func (in *RolloverParameters) DeepCopy() *RolloverParameters {
	if in == nil {
		return nil
	}
	out := new(RolloverParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3InitParameters) DeepCopyInto(out *S3InitParameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.PathStyleAccess != nil {
		in, out := &in.PathStyleAccess, &out.PathStyleAccess
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3InitParameters.
func (in *S3InitParameters) DeepCopy() *S3InitParameters {
	if in == nil {
		return nil
	}
	out := new(S3InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Observation) DeepCopyInto(out *S3Observation) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.PathStyleAccess != nil {
		in, out := &in.PathStyleAccess, &out.PathStyleAccess
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Observation.
func (in *S3Observation) DeepCopy() *S3Observation {
	if in == nil {
		return nil
	}
	out := new(S3Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *S3Parameters) DeepCopyInto(out *S3Parameters) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.Bucket != nil {
		in, out := &in.Bucket, &out.Bucket
		*out = new(string)
		**out = **in
	}
	if in.BufferSize != nil {
		in, out := &in.BufferSize, &out.BufferSize
		*out = new(string)
		**out = **in
	}
	if in.CannedACL != nil {
		in, out := &in.CannedACL, &out.CannedACL
		*out = new(string)
		**out = **in
	}
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Client != nil {
		in, out := &in.Client, &out.Client
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.PathStyleAccess != nil {
		in, out := &in.PathStyleAccess, &out.PathStyleAccess
		*out = new(bool)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.ServerSideEncryption != nil {
		in, out := &in.ServerSideEncryption, &out.ServerSideEncryption
		*out = new(bool)
		**out = **in
	}
	if in.StorageClass != nil {
		in, out := &in.StorageClass, &out.StorageClass
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new S3Parameters.
func (in *S3Parameters) DeepCopy() *S3Parameters {
	if in == nil {
		return nil
	}
	out := new(S3Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Script) DeepCopyInto(out *Script) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Script.
func (in *Script) DeepCopy() *Script {
	if in == nil {
		return nil
	}
	out := new(Script)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Script) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptElasticsearchConnectionInitParameters) DeepCopyInto(out *ScriptElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptElasticsearchConnectionInitParameters.
func (in *ScriptElasticsearchConnectionInitParameters) DeepCopy() *ScriptElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptElasticsearchConnectionObservation) DeepCopyInto(out *ScriptElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptElasticsearchConnectionObservation.
func (in *ScriptElasticsearchConnectionObservation) DeepCopy() *ScriptElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptElasticsearchConnectionParameters) DeepCopyInto(out *ScriptElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptElasticsearchConnectionParameters.
func (in *ScriptElasticsearchConnectionParameters) DeepCopy() *ScriptElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptInitParameters) DeepCopyInto(out *ScriptInitParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ScriptElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lang != nil {
		in, out := &in.Lang, &out.Lang
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new(string)
		**out = **in
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptInitParameters.
func (in *ScriptInitParameters) DeepCopy() *ScriptInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptList) DeepCopyInto(out *ScriptList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Script, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptList.
func (in *ScriptList) DeepCopy() *ScriptList {
	if in == nil {
		return nil
	}
	out := new(ScriptList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScriptList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptObservation) DeepCopyInto(out *ScriptObservation) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ScriptElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Lang != nil {
		in, out := &in.Lang, &out.Lang
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new(string)
		**out = **in
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptObservation.
func (in *ScriptObservation) DeepCopy() *ScriptObservation {
	if in == nil {
		return nil
	}
	out := new(ScriptObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptParameters) DeepCopyInto(out *ScriptParameters) {
	*out = *in
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = new(string)
		**out = **in
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]ScriptElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Lang != nil {
		in, out := &in.Lang, &out.Lang
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new(string)
		**out = **in
	}
	if in.ScriptID != nil {
		in, out := &in.ScriptID, &out.ScriptID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptParameters.
func (in *ScriptParameters) DeepCopy() *ScriptParameters {
	if in == nil {
		return nil
	}
	out := new(ScriptParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptSpec) DeepCopyInto(out *ScriptSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptSpec.
func (in *ScriptSpec) DeepCopy() *ScriptSpec {
	if in == nil {
		return nil
	}
	out := new(ScriptSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScriptStatus) DeepCopyInto(out *ScriptStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScriptStatus.
func (in *ScriptStatus) DeepCopy() *ScriptStatus {
	if in == nil {
		return nil
	}
	out := new(ScriptStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchableSnapshotInitParameters) DeepCopyInto(out *SearchableSnapshotInitParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchableSnapshotInitParameters.
func (in *SearchableSnapshotInitParameters) DeepCopy() *SearchableSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(SearchableSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchableSnapshotObservation) DeepCopyInto(out *SearchableSnapshotObservation) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchableSnapshotObservation.
func (in *SearchableSnapshotObservation) DeepCopy() *SearchableSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(SearchableSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SearchableSnapshotParameters) DeepCopyInto(out *SearchableSnapshotParameters) {
	*out = *in
	if in.ForceMergeIndex != nil {
		in, out := &in.ForceMergeIndex, &out.ForceMergeIndex
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotRepository != nil {
		in, out := &in.SnapshotRepository, &out.SnapshotRepository
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SearchableSnapshotParameters.
func (in *SearchableSnapshotParameters) DeepCopy() *SearchableSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(SearchableSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKey) DeepCopyInto(out *SecurityAPIKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKey.
func (in *SecurityAPIKey) DeepCopy() *SecurityAPIKey {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityAPIKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyElasticsearchConnectionInitParameters) DeepCopyInto(out *SecurityAPIKeyElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyElasticsearchConnectionInitParameters.
func (in *SecurityAPIKeyElasticsearchConnectionInitParameters) DeepCopy() *SecurityAPIKeyElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyElasticsearchConnectionObservation) DeepCopyInto(out *SecurityAPIKeyElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyElasticsearchConnectionObservation.
func (in *SecurityAPIKeyElasticsearchConnectionObservation) DeepCopy() *SecurityAPIKeyElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyElasticsearchConnectionParameters) DeepCopyInto(out *SecurityAPIKeyElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyElasticsearchConnectionParameters.
func (in *SecurityAPIKeyElasticsearchConnectionParameters) DeepCopy() *SecurityAPIKeyElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyInitParameters) DeepCopyInto(out *SecurityAPIKeyInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityAPIKeyElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleDescriptors != nil {
		in, out := &in.RoleDescriptors, &out.RoleDescriptors
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyInitParameters.
func (in *SecurityAPIKeyInitParameters) DeepCopy() *SecurityAPIKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyList) DeepCopyInto(out *SecurityAPIKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityAPIKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyList.
func (in *SecurityAPIKeyList) DeepCopy() *SecurityAPIKeyList {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityAPIKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyObservation) DeepCopyInto(out *SecurityAPIKeyObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityAPIKeyElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTimestamp != nil {
		in, out := &in.ExpirationTimestamp, &out.ExpirationTimestamp
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleDescriptors != nil {
		in, out := &in.RoleDescriptors, &out.RoleDescriptors
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyObservation.
func (in *SecurityAPIKeyObservation) DeepCopy() *SecurityAPIKeyObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyParameters) DeepCopyInto(out *SecurityAPIKeyParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityAPIKeyElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Expiration != nil {
		in, out := &in.Expiration, &out.Expiration
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleDescriptors != nil {
		in, out := &in.RoleDescriptors, &out.RoleDescriptors
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyParameters.
func (in *SecurityAPIKeyParameters) DeepCopy() *SecurityAPIKeyParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeySpec) DeepCopyInto(out *SecurityAPIKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeySpec.
func (in *SecurityAPIKeySpec) DeepCopy() *SecurityAPIKeySpec {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityAPIKeyStatus) DeepCopyInto(out *SecurityAPIKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityAPIKeyStatus.
func (in *SecurityAPIKeyStatus) DeepCopy() *SecurityAPIKeyStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityAPIKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRole) DeepCopyInto(out *SecurityRole) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRole.
func (in *SecurityRole) DeepCopy() *SecurityRole {
	if in == nil {
		return nil
	}
	out := new(SecurityRole)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRole) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleElasticsearchConnectionInitParameters) DeepCopyInto(out *SecurityRoleElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleElasticsearchConnectionInitParameters.
func (in *SecurityRoleElasticsearchConnectionInitParameters) DeepCopy() *SecurityRoleElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleElasticsearchConnectionObservation) DeepCopyInto(out *SecurityRoleElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleElasticsearchConnectionObservation.
func (in *SecurityRoleElasticsearchConnectionObservation) DeepCopy() *SecurityRoleElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleElasticsearchConnectionParameters) DeepCopyInto(out *SecurityRoleElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleElasticsearchConnectionParameters.
func (in *SecurityRoleElasticsearchConnectionParameters) DeepCopy() *SecurityRoleElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleIndicesInitParameters) DeepCopyInto(out *SecurityRoleIndicesInitParameters) {
	*out = *in
	if in.AllowRestrictedIndices != nil {
		in, out := &in.AllowRestrictedIndices, &out.AllowRestrictedIndices
		*out = new(bool)
		**out = **in
	}
	if in.FieldSecurity != nil {
		in, out := &in.FieldSecurity, &out.FieldSecurity
		*out = make([]FieldSecurityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleIndicesInitParameters.
func (in *SecurityRoleIndicesInitParameters) DeepCopy() *SecurityRoleIndicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleIndicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleIndicesObservation) DeepCopyInto(out *SecurityRoleIndicesObservation) {
	*out = *in
	if in.AllowRestrictedIndices != nil {
		in, out := &in.AllowRestrictedIndices, &out.AllowRestrictedIndices
		*out = new(bool)
		**out = **in
	}
	if in.FieldSecurity != nil {
		in, out := &in.FieldSecurity, &out.FieldSecurity
		*out = make([]FieldSecurityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleIndicesObservation.
func (in *SecurityRoleIndicesObservation) DeepCopy() *SecurityRoleIndicesObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleIndicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleIndicesParameters) DeepCopyInto(out *SecurityRoleIndicesParameters) {
	*out = *in
	if in.AllowRestrictedIndices != nil {
		in, out := &in.AllowRestrictedIndices, &out.AllowRestrictedIndices
		*out = new(bool)
		**out = **in
	}
	if in.FieldSecurity != nil {
		in, out := &in.FieldSecurity, &out.FieldSecurity
		*out = make([]FieldSecurityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Names != nil {
		in, out := &in.Names, &out.Names
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Privileges != nil {
		in, out := &in.Privileges, &out.Privileges
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleIndicesParameters.
func (in *SecurityRoleIndicesParameters) DeepCopy() *SecurityRoleIndicesParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleIndicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleInitParameters) DeepCopyInto(out *SecurityRoleInitParameters) {
	*out = *in
	if in.Applications != nil {
		in, out := &in.Applications, &out.Applications
		*out = make([]ApplicationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(string)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]SecurityRoleIndicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleInitParameters.
func (in *SecurityRoleInitParameters) DeepCopy() *SecurityRoleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleList) DeepCopyInto(out *SecurityRoleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityRole, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleList.
func (in *SecurityRoleList) DeepCopy() *SecurityRoleList {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRoleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMapping) DeepCopyInto(out *SecurityRoleMapping) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMapping.
func (in *SecurityRoleMapping) DeepCopy() *SecurityRoleMapping {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRoleMapping) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingElasticsearchConnectionInitParameters) DeepCopyInto(out *SecurityRoleMappingElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingElasticsearchConnectionInitParameters.
func (in *SecurityRoleMappingElasticsearchConnectionInitParameters) DeepCopy() *SecurityRoleMappingElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingElasticsearchConnectionObservation) DeepCopyInto(out *SecurityRoleMappingElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingElasticsearchConnectionObservation.
func (in *SecurityRoleMappingElasticsearchConnectionObservation) DeepCopy() *SecurityRoleMappingElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingElasticsearchConnectionParameters) DeepCopyInto(out *SecurityRoleMappingElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingElasticsearchConnectionParameters.
func (in *SecurityRoleMappingElasticsearchConnectionParameters) DeepCopy() *SecurityRoleMappingElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingInitParameters) DeepCopyInto(out *SecurityRoleMappingInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleMappingElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleTemplates != nil {
		in, out := &in.RoleTemplates, &out.RoleTemplates
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingInitParameters.
func (in *SecurityRoleMappingInitParameters) DeepCopy() *SecurityRoleMappingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingList) DeepCopyInto(out *SecurityRoleMappingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityRoleMapping, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingList.
func (in *SecurityRoleMappingList) DeepCopy() *SecurityRoleMappingList {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityRoleMappingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingObservation) DeepCopyInto(out *SecurityRoleMappingObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleMappingElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleTemplates != nil {
		in, out := &in.RoleTemplates, &out.RoleTemplates
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingObservation.
func (in *SecurityRoleMappingObservation) DeepCopy() *SecurityRoleMappingObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingParameters) DeepCopyInto(out *SecurityRoleMappingParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleMappingElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RoleTemplates != nil {
		in, out := &in.RoleTemplates, &out.RoleTemplates
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingParameters.
func (in *SecurityRoleMappingParameters) DeepCopy() *SecurityRoleMappingParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingSpec) DeepCopyInto(out *SecurityRoleMappingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingSpec.
func (in *SecurityRoleMappingSpec) DeepCopy() *SecurityRoleMappingSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleMappingStatus) DeepCopyInto(out *SecurityRoleMappingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleMappingStatus.
func (in *SecurityRoleMappingStatus) DeepCopy() *SecurityRoleMappingStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleMappingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleObservation) DeepCopyInto(out *SecurityRoleObservation) {
	*out = *in
	if in.Applications != nil {
		in, out := &in.Applications, &out.Applications
		*out = make([]ApplicationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]SecurityRoleIndicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleObservation.
func (in *SecurityRoleObservation) DeepCopy() *SecurityRoleObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleParameters) DeepCopyInto(out *SecurityRoleParameters) {
	*out = *in
	if in.Applications != nil {
		in, out := &in.Applications, &out.Applications
		*out = make([]ApplicationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Cluster != nil {
		in, out := &in.Cluster, &out.Cluster
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityRoleElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Global != nil {
		in, out := &in.Global, &out.Global
		*out = new(string)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]SecurityRoleIndicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RunAs != nil {
		in, out := &in.RunAs, &out.RunAs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleParameters.
func (in *SecurityRoleParameters) DeepCopy() *SecurityRoleParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleSpec) DeepCopyInto(out *SecurityRoleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleSpec.
func (in *SecurityRoleSpec) DeepCopy() *SecurityRoleSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityRoleStatus) DeepCopyInto(out *SecurityRoleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityRoleStatus.
func (in *SecurityRoleStatus) DeepCopy() *SecurityRoleStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityRoleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUser) DeepCopyInto(out *SecuritySystemUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUser.
func (in *SecuritySystemUser) DeepCopy() *SecuritySystemUser {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecuritySystemUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserElasticsearchConnectionInitParameters) DeepCopyInto(out *SecuritySystemUserElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserElasticsearchConnectionInitParameters.
func (in *SecuritySystemUserElasticsearchConnectionInitParameters) DeepCopy() *SecuritySystemUserElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserElasticsearchConnectionObservation) DeepCopyInto(out *SecuritySystemUserElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserElasticsearchConnectionObservation.
func (in *SecuritySystemUserElasticsearchConnectionObservation) DeepCopy() *SecuritySystemUserElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserElasticsearchConnectionParameters) DeepCopyInto(out *SecuritySystemUserElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserElasticsearchConnectionParameters.
func (in *SecuritySystemUserElasticsearchConnectionParameters) DeepCopy() *SecuritySystemUserElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserInitParameters) DeepCopyInto(out *SecuritySystemUserInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecuritySystemUserElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserInitParameters.
func (in *SecuritySystemUserInitParameters) DeepCopy() *SecuritySystemUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserList) DeepCopyInto(out *SecuritySystemUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecuritySystemUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserList.
func (in *SecuritySystemUserList) DeepCopy() *SecuritySystemUserList {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecuritySystemUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserObservation) DeepCopyInto(out *SecuritySystemUserObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecuritySystemUserElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserObservation.
func (in *SecuritySystemUserObservation) DeepCopy() *SecuritySystemUserObservation {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserParameters) DeepCopyInto(out *SecuritySystemUserParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecuritySystemUserElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.PasswordHashSecretRef != nil {
		in, out := &in.PasswordHashSecretRef, &out.PasswordHashSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserParameters.
func (in *SecuritySystemUserParameters) DeepCopy() *SecuritySystemUserParameters {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserSpec) DeepCopyInto(out *SecuritySystemUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserSpec.
func (in *SecuritySystemUserSpec) DeepCopy() *SecuritySystemUserSpec {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecuritySystemUserStatus) DeepCopyInto(out *SecuritySystemUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecuritySystemUserStatus.
func (in *SecuritySystemUserStatus) DeepCopy() *SecuritySystemUserStatus {
	if in == nil {
		return nil
	}
	out := new(SecuritySystemUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUser) DeepCopyInto(out *SecurityUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUser.
func (in *SecurityUser) DeepCopy() *SecurityUser {
	if in == nil {
		return nil
	}
	out := new(SecurityUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserElasticsearchConnectionInitParameters) DeepCopyInto(out *SecurityUserElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserElasticsearchConnectionInitParameters.
func (in *SecurityUserElasticsearchConnectionInitParameters) DeepCopy() *SecurityUserElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityUserElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserElasticsearchConnectionObservation) DeepCopyInto(out *SecurityUserElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserElasticsearchConnectionObservation.
func (in *SecurityUserElasticsearchConnectionObservation) DeepCopy() *SecurityUserElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityUserElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserElasticsearchConnectionParameters) DeepCopyInto(out *SecurityUserElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserElasticsearchConnectionParameters.
func (in *SecurityUserElasticsearchConnectionParameters) DeepCopy() *SecurityUserElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityUserElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserInitParameters) DeepCopyInto(out *SecurityUserInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityUserElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserInitParameters.
func (in *SecurityUserInitParameters) DeepCopy() *SecurityUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserList) DeepCopyInto(out *SecurityUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserList.
func (in *SecurityUserList) DeepCopy() *SecurityUserList {
	if in == nil {
		return nil
	}
	out := new(SecurityUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserObservation) DeepCopyInto(out *SecurityUserObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityUserElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserObservation.
func (in *SecurityUserObservation) DeepCopy() *SecurityUserObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserParameters) DeepCopyInto(out *SecurityUserParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SecurityUserElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FullName != nil {
		in, out := &in.FullName, &out.FullName
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.PasswordHashSecretRef != nil {
		in, out := &in.PasswordHashSecretRef, &out.PasswordHashSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Roles != nil {
		in, out := &in.Roles, &out.Roles
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserParameters.
func (in *SecurityUserParameters) DeepCopy() *SecurityUserParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserSpec) DeepCopyInto(out *SecurityUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserSpec.
func (in *SecurityUserSpec) DeepCopy() *SecurityUserSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityUserStatus) DeepCopyInto(out *SecurityUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityUserStatus.
func (in *SecurityUserStatus) DeepCopy() *SecurityUserStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SetPriorityInitParameters) DeepCopyInto(out *SetPriorityInitParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SetPriorityInitParameters.
func (in *SetPriorityInitParameters) DeepCopy() *SetPriorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(SetPriorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SetPriorityObservation) DeepCopyInto(out *SetPriorityObservation) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SetPriorityObservation.
func (in *SetPriorityObservation) DeepCopy() *SetPriorityObservation {
	if in == nil {
		return nil
	}
	out := new(SetPriorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SetPriorityParameters) DeepCopyInto(out *SetPriorityParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SetPriorityParameters.
func (in *SetPriorityParameters) DeepCopy() *SetPriorityParameters {
	if in == nil {
		return nil
	}
	out := new(SetPriorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingInitParameters) DeepCopyInto(out *SettingInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingInitParameters.
func (in *SettingInitParameters) DeepCopy() *SettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingObservation) DeepCopyInto(out *SettingObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingObservation.
func (in *SettingObservation) DeepCopy() *SettingObservation {
	if in == nil {
		return nil
	}
	out := new(SettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingParameters) DeepCopyInto(out *SettingParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingParameters.
func (in *SettingParameters) DeepCopy() *SettingParameters {
	if in == nil {
		return nil
	}
	out := new(SettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingsSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingsSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]SettingsSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSettingInitParameters) DeepCopyInto(out *SettingsSettingInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSettingInitParameters.
func (in *SettingsSettingInitParameters) DeepCopy() *SettingsSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSettingObservation) DeepCopyInto(out *SettingsSettingObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSettingObservation.
func (in *SettingsSettingObservation) DeepCopy() *SettingsSettingObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSettingParameters) DeepCopyInto(out *SettingsSettingParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSettingParameters.
func (in *SettingsSettingParameters) DeepCopy() *SettingsSettingParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShrinkInitParameters) DeepCopyInto(out *ShrinkInitParameters) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShrinkInitParameters.
func (in *ShrinkInitParameters) DeepCopy() *ShrinkInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShrinkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShrinkObservation) DeepCopyInto(out *ShrinkObservation) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShrinkObservation.
func (in *ShrinkObservation) DeepCopy() *ShrinkObservation {
	if in == nil {
		return nil
	}
	out := new(ShrinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShrinkParameters) DeepCopyInto(out *ShrinkParameters) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShrinkParameters.
func (in *ShrinkParameters) DeepCopy() *ShrinkParameters {
	if in == nil {
		return nil
	}
	out := new(ShrinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycle) DeepCopyInto(out *SnapshotLifecycle) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycle.
func (in *SnapshotLifecycle) DeepCopy() *SnapshotLifecycle {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycle)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotLifecycle) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleElasticsearchConnectionInitParameters) DeepCopyInto(out *SnapshotLifecycleElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleElasticsearchConnectionInitParameters.
func (in *SnapshotLifecycleElasticsearchConnectionInitParameters) DeepCopy() *SnapshotLifecycleElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleElasticsearchConnectionObservation) DeepCopyInto(out *SnapshotLifecycleElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleElasticsearchConnectionObservation.
func (in *SnapshotLifecycleElasticsearchConnectionObservation) DeepCopy() *SnapshotLifecycleElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleElasticsearchConnectionParameters) DeepCopyInto(out *SnapshotLifecycleElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleElasticsearchConnectionParameters.
func (in *SnapshotLifecycleElasticsearchConnectionParameters) DeepCopy() *SnapshotLifecycleElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleInitParameters) DeepCopyInto(out *SnapshotLifecycleInitParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotLifecycleElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpandWildcards != nil {
		in, out := &in.ExpandWildcards, &out.ExpandWildcards
		*out = new(string)
		**out = **in
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.FeatureStates != nil {
		in, out := &in.FeatureStates, &out.FeatureStates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreUnavailable != nil {
		in, out := &in.IgnoreUnavailable, &out.IgnoreUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.IncludeGlobalState != nil {
		in, out := &in.IncludeGlobalState, &out.IncludeGlobalState
		*out = new(bool)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partial != nil {
		in, out := &in.Partial, &out.Partial
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleInitParameters.
func (in *SnapshotLifecycleInitParameters) DeepCopy() *SnapshotLifecycleInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleList) DeepCopyInto(out *SnapshotLifecycleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnapshotLifecycle, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleList.
func (in *SnapshotLifecycleList) DeepCopy() *SnapshotLifecycleList {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotLifecycleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleObservation) DeepCopyInto(out *SnapshotLifecycleObservation) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotLifecycleElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpandWildcards != nil {
		in, out := &in.ExpandWildcards, &out.ExpandWildcards
		*out = new(string)
		**out = **in
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.FeatureStates != nil {
		in, out := &in.FeatureStates, &out.FeatureStates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IgnoreUnavailable != nil {
		in, out := &in.IgnoreUnavailable, &out.IgnoreUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.IncludeGlobalState != nil {
		in, out := &in.IncludeGlobalState, &out.IncludeGlobalState
		*out = new(bool)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partial != nil {
		in, out := &in.Partial, &out.Partial
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleObservation.
func (in *SnapshotLifecycleObservation) DeepCopy() *SnapshotLifecycleObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleParameters) DeepCopyInto(out *SnapshotLifecycleParameters) {
	*out = *in
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotLifecycleElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ExpandWildcards != nil {
		in, out := &in.ExpandWildcards, &out.ExpandWildcards
		*out = new(string)
		**out = **in
	}
	if in.ExpireAfter != nil {
		in, out := &in.ExpireAfter, &out.ExpireAfter
		*out = new(string)
		**out = **in
	}
	if in.FeatureStates != nil {
		in, out := &in.FeatureStates, &out.FeatureStates
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreUnavailable != nil {
		in, out := &in.IgnoreUnavailable, &out.IgnoreUnavailable
		*out = new(bool)
		**out = **in
	}
	if in.IncludeGlobalState != nil {
		in, out := &in.IncludeGlobalState, &out.IncludeGlobalState
		*out = new(bool)
		**out = **in
	}
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MaxCount != nil {
		in, out := &in.MaxCount, &out.MaxCount
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.MinCount != nil {
		in, out := &in.MinCount, &out.MinCount
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Partial != nil {
		in, out := &in.Partial, &out.Partial
		*out = new(bool)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(string)
		**out = **in
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(string)
		**out = **in
	}
	if in.SnapshotName != nil {
		in, out := &in.SnapshotName, &out.SnapshotName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleParameters.
func (in *SnapshotLifecycleParameters) DeepCopy() *SnapshotLifecycleParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleSpec) DeepCopyInto(out *SnapshotLifecycleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleSpec.
func (in *SnapshotLifecycleSpec) DeepCopy() *SnapshotLifecycleSpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotLifecycleStatus) DeepCopyInto(out *SnapshotLifecycleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotLifecycleStatus.
func (in *SnapshotLifecycleStatus) DeepCopy() *SnapshotLifecycleStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotLifecycleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepository) DeepCopyInto(out *SnapshotRepository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepository.
func (in *SnapshotRepository) DeepCopy() *SnapshotRepository {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotRepository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryElasticsearchConnectionInitParameters) DeepCopyInto(out *SnapshotRepositoryElasticsearchConnectionInitParameters) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryElasticsearchConnectionInitParameters.
func (in *SnapshotRepositoryElasticsearchConnectionInitParameters) DeepCopy() *SnapshotRepositoryElasticsearchConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryElasticsearchConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryElasticsearchConnectionObservation) DeepCopyInto(out *SnapshotRepositoryElasticsearchConnectionObservation) {
	*out = *in
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryElasticsearchConnectionObservation.
func (in *SnapshotRepositoryElasticsearchConnectionObservation) DeepCopy() *SnapshotRepositoryElasticsearchConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryElasticsearchConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryElasticsearchConnectionParameters) DeepCopyInto(out *SnapshotRepositoryElasticsearchConnectionParameters) {
	*out = *in
	if in.APIKeySecretRef != nil {
		in, out := &in.APIKeySecretRef, &out.APIKeySecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.CAData != nil {
		in, out := &in.CAData, &out.CAData
		*out = new(string)
		**out = **in
	}
	if in.CAFile != nil {
		in, out := &in.CAFile, &out.CAFile
		*out = new(string)
		**out = **in
	}
	if in.CertData != nil {
		in, out := &in.CertData, &out.CertData
		*out = new(string)
		**out = **in
	}
	if in.CertFile != nil {
		in, out := &in.CertFile, &out.CertFile
		*out = new(string)
		**out = **in
	}
	if in.EndpointsSecretRef != nil {
		in, out := &in.EndpointsSecretRef, &out.EndpointsSecretRef
		*out = new([]v1.SecretKeySelector)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.SecretKeySelector, len(*in))
			copy(*out, *in)
		}
	}
	if in.Insecure != nil {
		in, out := &in.Insecure, &out.Insecure
		*out = new(bool)
		**out = **in
	}
	if in.KeyDataSecretRef != nil {
		in, out := &in.KeyDataSecretRef, &out.KeyDataSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.KeyFile != nil {
		in, out := &in.KeyFile, &out.KeyFile
		*out = new(string)
		**out = **in
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryElasticsearchConnectionParameters.
func (in *SnapshotRepositoryElasticsearchConnectionParameters) DeepCopy() *SnapshotRepositoryElasticsearchConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryElasticsearchConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryInitParameters) DeepCopyInto(out *SnapshotRepositoryInitParameters) {
	*out = *in
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotRepositoryElasticsearchConnectionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fs != nil {
		in, out := &in.Fs, &out.Fs
		*out = make([]FsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdfs != nil {
		in, out := &in.Hdfs, &out.Hdfs
		*out = make([]HdfsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3InitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = make([]URLInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Verify != nil {
		in, out := &in.Verify, &out.Verify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryInitParameters.
func (in *SnapshotRepositoryInitParameters) DeepCopy() *SnapshotRepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryList) DeepCopyInto(out *SnapshotRepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SnapshotRepository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryList.
func (in *SnapshotRepositoryList) DeepCopy() *SnapshotRepositoryList {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SnapshotRepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryObservation) DeepCopyInto(out *SnapshotRepositoryObservation) {
	*out = *in
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotRepositoryElasticsearchConnectionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fs != nil {
		in, out := &in.Fs, &out.Fs
		*out = make([]FsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdfs != nil {
		in, out := &in.Hdfs, &out.Hdfs
		*out = make([]HdfsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Observation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = make([]URLObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Verify != nil {
		in, out := &in.Verify, &out.Verify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryObservation.
func (in *SnapshotRepositoryObservation) DeepCopy() *SnapshotRepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryParameters) DeepCopyInto(out *SnapshotRepositoryParameters) {
	*out = *in
	if in.Azure != nil {
		in, out := &in.Azure, &out.Azure
		*out = make([]AzureParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ElasticsearchConnection != nil {
		in, out := &in.ElasticsearchConnection, &out.ElasticsearchConnection
		*out = make([]SnapshotRepositoryElasticsearchConnectionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Fs != nil {
		in, out := &in.Fs, &out.Fs
		*out = make([]FsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Gcs != nil {
		in, out := &in.Gcs, &out.Gcs
		*out = make([]GcsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Hdfs != nil {
		in, out := &in.Hdfs, &out.Hdfs
		*out = make([]HdfsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.S3 != nil {
		in, out := &in.S3, &out.S3
		*out = make([]S3Parameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = make([]URLParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Verify != nil {
		in, out := &in.Verify, &out.Verify
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryParameters.
func (in *SnapshotRepositoryParameters) DeepCopy() *SnapshotRepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositorySpec) DeepCopyInto(out *SnapshotRepositorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositorySpec.
func (in *SnapshotRepositorySpec) DeepCopy() *SnapshotRepositorySpec {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotRepositoryStatus) DeepCopyInto(out *SnapshotRepositoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotRepositoryStatus.
func (in *SnapshotRepositoryStatus) DeepCopy() *SnapshotRepositoryStatus {
	if in == nil {
		return nil
	}
	out := new(SnapshotRepositoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceInitParameters) DeepCopyInto(out *SourceInitParameters) {
	*out = *in
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMappings != nil {
		in, out := &in.RuntimeMappings, &out.RuntimeMappings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceInitParameters.
func (in *SourceInitParameters) DeepCopy() *SourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMappings != nil {
		in, out := &in.RuntimeMappings, &out.RuntimeMappings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Indices != nil {
		in, out := &in.Indices, &out.Indices
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.RuntimeMappings != nil {
		in, out := &in.RuntimeMappings, &out.RuntimeMappings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncInitParameters) DeepCopyInto(out *SyncInitParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]SyncTimeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncInitParameters.
func (in *SyncInitParameters) DeepCopy() *SyncInitParameters {
	if in == nil {
		return nil
	}
	out := new(SyncInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncObservation) DeepCopyInto(out *SyncObservation) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]SyncTimeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncObservation.
func (in *SyncObservation) DeepCopy() *SyncObservation {
	if in == nil {
		return nil
	}
	out := new(SyncObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncParameters) DeepCopyInto(out *SyncParameters) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = make([]SyncTimeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncParameters.
func (in *SyncParameters) DeepCopy() *SyncParameters {
	if in == nil {
		return nil
	}
	out := new(SyncParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncTimeInitParameters) DeepCopyInto(out *SyncTimeInitParameters) {
	*out = *in
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncTimeInitParameters.
func (in *SyncTimeInitParameters) DeepCopy() *SyncTimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SyncTimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncTimeObservation) DeepCopyInto(out *SyncTimeObservation) {
	*out = *in
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncTimeObservation.
func (in *SyncTimeObservation) DeepCopy() *SyncTimeObservation {
	if in == nil {
		return nil
	}
	out := new(SyncTimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncTimeParameters) DeepCopyInto(out *SyncTimeParameters) {
	*out = *in
	if in.Delay != nil {
		in, out := &in.Delay, &out.Delay
		*out = new(string)
		**out = **in
	}
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncTimeParameters.
func (in *SyncTimeParameters) DeepCopy() *SyncTimeParameters {
	if in == nil {
		return nil
	}
	out := new(SyncTimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateAliasInitParameters) DeepCopyInto(out *TemplateAliasInitParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateAliasInitParameters.
func (in *TemplateAliasInitParameters) DeepCopy() *TemplateAliasInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateAliasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateAliasObservation) DeepCopyInto(out *TemplateAliasObservation) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateAliasObservation.
func (in *TemplateAliasObservation) DeepCopy() *TemplateAliasObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateAliasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateAliasParameters) DeepCopyInto(out *TemplateAliasParameters) {
	*out = *in
	if in.Filter != nil {
		in, out := &in.Filter, &out.Filter
		*out = new(string)
		**out = **in
	}
	if in.IndexRouting != nil {
		in, out := &in.IndexRouting, &out.IndexRouting
		*out = new(string)
		**out = **in
	}
	if in.IsHidden != nil {
		in, out := &in.IsHidden, &out.IsHidden
		*out = new(bool)
		**out = **in
	}
	if in.IsWriteIndex != nil {
		in, out := &in.IsWriteIndex, &out.IsWriteIndex
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SearchRouting != nil {
		in, out := &in.SearchRouting, &out.SearchRouting
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateAliasParameters.
func (in *TemplateAliasParameters) DeepCopy() *TemplateAliasParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateAliasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateInitParameters) DeepCopyInto(out *TemplateInitParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]AliasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateInitParameters.
func (in *TemplateInitParameters) DeepCopy() *TemplateInitParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateObservation) DeepCopyInto(out *TemplateObservation) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]AliasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateObservation.
func (in *TemplateObservation) DeepCopy() *TemplateObservation {
	if in == nil {
		return nil
	}
	out := new(TemplateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TemplateParameters) DeepCopyInto(out *TemplateParameters) {
	*out = *in
	if in.Alias != nil {
		in, out := &in.Alias, &out.Alias
		*out = make([]AliasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mappings != nil {
		in, out := &in.Mappings, &out.Mappings
		*out = new(string)
		**out = **in
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TemplateParameters.
func (in *TemplateParameters) DeepCopy() *TemplateParameters {
	if in == nil {
		return nil
	}
	out := new(TemplateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeInitParameters) DeepCopyInto(out *TimeInitParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeInitParameters.
func (in *TimeInitParameters) DeepCopy() *TimeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TimeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeObservation) DeepCopyInto(out *TimeObservation) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeObservation.
func (in *TimeObservation) DeepCopy() *TimeObservation {
	if in == nil {
		return nil
	}
	out := new(TimeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TimeParameters) DeepCopyInto(out *TimeParameters) {
	*out = *in
	if in.Field != nil {
		in, out := &in.Field, &out.Field
		*out = new(string)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TimeParameters.
func (in *TimeParameters) DeepCopy() *TimeParameters {
	if in == nil {
		return nil
	}
	out := new(TimeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Transform) DeepCopyInto(out *Transform) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Transform.
func (in *Transform) DeepCopy() *Transform {
	if in == nil {
		return nil
	}
	out := new(Transform)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Transform) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformInitParameters) DeepCopyInto(out *TransformInitParameters) {
	*out = *in
	if in.AlignCheckpoints != nil {
		in, out := &in.AlignCheckpoints, &out.AlignCheckpoints
		*out = new(bool)
		**out = **in
	}
	if in.DatesAsEpochMillis != nil {
		in, out := &in.DatesAsEpochMillis, &out.DatesAsEpochMillis
		*out = new(bool)
		**out = **in
	}
	if in.DeduceMappings != nil {
		in, out := &in.DeduceMappings, &out.DeduceMappings
		*out = new(bool)
		**out = **in
	}
	if in.DeferValidation != nil {
		in, out := &in.DeferValidation, &out.DeferValidation
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocsPerSecond != nil {
		in, out := &in.DocsPerSecond, &out.DocsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Latest != nil {
		in, out := &in.Latest, &out.Latest
		*out = new(string)
		**out = **in
	}
	if in.MaxPageSearchSize != nil {
		in, out := &in.MaxPageSearchSize, &out.MaxPageSearchSize
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumFailureRetries != nil {
		in, out := &in.NumFailureRetries, &out.NumFailureRetries
		*out = new(float64)
		**out = **in
	}
	if in.Pivot != nil {
		in, out := &in.Pivot, &out.Pivot
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sync != nil {
		in, out := &in.Sync, &out.Sync
		*out = make([]SyncInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Unattended != nil {
		in, out := &in.Unattended, &out.Unattended
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformInitParameters.
func (in *TransformInitParameters) DeepCopy() *TransformInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransformInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformList) DeepCopyInto(out *TransformList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Transform, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformList.
func (in *TransformList) DeepCopy() *TransformList {
	if in == nil {
		return nil
	}
	out := new(TransformList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TransformList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformObservation) DeepCopyInto(out *TransformObservation) {
	*out = *in
	if in.AlignCheckpoints != nil {
		in, out := &in.AlignCheckpoints, &out.AlignCheckpoints
		*out = new(bool)
		**out = **in
	}
	if in.DatesAsEpochMillis != nil {
		in, out := &in.DatesAsEpochMillis, &out.DatesAsEpochMillis
		*out = new(bool)
		**out = **in
	}
	if in.DeduceMappings != nil {
		in, out := &in.DeduceMappings, &out.DeduceMappings
		*out = new(bool)
		**out = **in
	}
	if in.DeferValidation != nil {
		in, out := &in.DeferValidation, &out.DeferValidation
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocsPerSecond != nil {
		in, out := &in.DocsPerSecond, &out.DocsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Latest != nil {
		in, out := &in.Latest, &out.Latest
		*out = new(string)
		**out = **in
	}
	if in.MaxPageSearchSize != nil {
		in, out := &in.MaxPageSearchSize, &out.MaxPageSearchSize
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumFailureRetries != nil {
		in, out := &in.NumFailureRetries, &out.NumFailureRetries
		*out = new(float64)
		**out = **in
	}
	if in.Pivot != nil {
		in, out := &in.Pivot, &out.Pivot
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sync != nil {
		in, out := &in.Sync, &out.Sync
		*out = make([]SyncObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Unattended != nil {
		in, out := &in.Unattended, &out.Unattended
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformObservation.
func (in *TransformObservation) DeepCopy() *TransformObservation {
	if in == nil {
		return nil
	}
	out := new(TransformObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformParameters) DeepCopyInto(out *TransformParameters) {
	*out = *in
	if in.AlignCheckpoints != nil {
		in, out := &in.AlignCheckpoints, &out.AlignCheckpoints
		*out = new(bool)
		**out = **in
	}
	if in.DatesAsEpochMillis != nil {
		in, out := &in.DatesAsEpochMillis, &out.DatesAsEpochMillis
		*out = new(bool)
		**out = **in
	}
	if in.DeduceMappings != nil {
		in, out := &in.DeduceMappings, &out.DeduceMappings
		*out = new(bool)
		**out = **in
	}
	if in.DeferValidation != nil {
		in, out := &in.DeferValidation, &out.DeferValidation
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DocsPerSecond != nil {
		in, out := &in.DocsPerSecond, &out.DocsPerSecond
		*out = new(float64)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Latest != nil {
		in, out := &in.Latest, &out.Latest
		*out = new(string)
		**out = **in
	}
	if in.MaxPageSearchSize != nil {
		in, out := &in.MaxPageSearchSize, &out.MaxPageSearchSize
		*out = new(float64)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NumFailureRetries != nil {
		in, out := &in.NumFailureRetries, &out.NumFailureRetries
		*out = new(float64)
		**out = **in
	}
	if in.Pivot != nil {
		in, out := &in.Pivot, &out.Pivot
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = make([]RetentionPolicyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sync != nil {
		in, out := &in.Sync, &out.Sync
		*out = make([]SyncParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(string)
		**out = **in
	}
	if in.Unattended != nil {
		in, out := &in.Unattended, &out.Unattended
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformParameters.
func (in *TransformParameters) DeepCopy() *TransformParameters {
	if in == nil {
		return nil
	}
	out := new(TransformParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformSpec) DeepCopyInto(out *TransformSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformSpec.
func (in *TransformSpec) DeepCopy() *TransformSpec {
	if in == nil {
		return nil
	}
	out := new(TransformSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransformStatus) DeepCopyInto(out *TransformStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransformStatus.
func (in *TransformStatus) DeepCopy() *TransformStatus {
	if in == nil {
		return nil
	}
	out := new(TransformStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientInitParameters) DeepCopyInto(out *TransientInitParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]TransientSettingInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientInitParameters.
func (in *TransientInitParameters) DeepCopy() *TransientInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransientInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientObservation) DeepCopyInto(out *TransientObservation) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]TransientSettingObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientObservation.
func (in *TransientObservation) DeepCopy() *TransientObservation {
	if in == nil {
		return nil
	}
	out := new(TransientObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientParameters) DeepCopyInto(out *TransientParameters) {
	*out = *in
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = make([]TransientSettingParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientParameters.
func (in *TransientParameters) DeepCopy() *TransientParameters {
	if in == nil {
		return nil
	}
	out := new(TransientParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientSettingInitParameters) DeepCopyInto(out *TransientSettingInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientSettingInitParameters.
func (in *TransientSettingInitParameters) DeepCopy() *TransientSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(TransientSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientSettingObservation) DeepCopyInto(out *TransientSettingObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientSettingObservation.
func (in *TransientSettingObservation) DeepCopy() *TransientSettingObservation {
	if in == nil {
		return nil
	}
	out := new(TransientSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TransientSettingParameters) DeepCopyInto(out *TransientSettingParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ValueList != nil {
		in, out := &in.ValueList, &out.ValueList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TransientSettingParameters.
func (in *TransientSettingParameters) DeepCopy() *TransientSettingParameters {
	if in == nil {
		return nil
	}
	out := new(TransientSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLInitParameters) DeepCopyInto(out *URLInitParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.HTTPMaxRetries != nil {
		in, out := &in.HTTPMaxRetries, &out.HTTPMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSocketTimeout != nil {
		in, out := &in.HTTPSocketTimeout, &out.HTTPSocketTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLInitParameters.
func (in *URLInitParameters) DeepCopy() *URLInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLObservation) DeepCopyInto(out *URLObservation) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.HTTPMaxRetries != nil {
		in, out := &in.HTTPMaxRetries, &out.HTTPMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSocketTimeout != nil {
		in, out := &in.HTTPSocketTimeout, &out.HTTPSocketTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLObservation.
func (in *URLObservation) DeepCopy() *URLObservation {
	if in == nil {
		return nil
	}
	out := new(URLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLParameters) DeepCopyInto(out *URLParameters) {
	*out = *in
	if in.ChunkSize != nil {
		in, out := &in.ChunkSize, &out.ChunkSize
		*out = new(string)
		**out = **in
	}
	if in.Compress != nil {
		in, out := &in.Compress, &out.Compress
		*out = new(bool)
		**out = **in
	}
	if in.HTTPMaxRetries != nil {
		in, out := &in.HTTPMaxRetries, &out.HTTPMaxRetries
		*out = new(float64)
		**out = **in
	}
	if in.HTTPSocketTimeout != nil {
		in, out := &in.HTTPSocketTimeout, &out.HTTPSocketTimeout
		*out = new(string)
		**out = **in
	}
	if in.MaxNumberOfSnapshots != nil {
		in, out := &in.MaxNumberOfSnapshots, &out.MaxNumberOfSnapshots
		*out = new(float64)
		**out = **in
	}
	if in.MaxRestoreBytesPerSec != nil {
		in, out := &in.MaxRestoreBytesPerSec, &out.MaxRestoreBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.MaxSnapshotBytesPerSec != nil {
		in, out := &in.MaxSnapshotBytesPerSec, &out.MaxSnapshotBytesPerSec
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = new(bool)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLParameters.
func (in *URLParameters) DeepCopy() *URLParameters {
	if in == nil {
		return nil
	}
	out := new(URLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnfollowInitParameters) DeepCopyInto(out *UnfollowInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnfollowInitParameters.
func (in *UnfollowInitParameters) DeepCopy() *UnfollowInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnfollowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnfollowObservation) DeepCopyInto(out *UnfollowObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnfollowObservation.
func (in *UnfollowObservation) DeepCopy() *UnfollowObservation {
	if in == nil {
		return nil
	}
	out := new(UnfollowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnfollowParameters) DeepCopyInto(out *UnfollowParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnfollowParameters.
func (in *UnfollowParameters) DeepCopy() *UnfollowParameters {
	if in == nil {
		return nil
	}
	out := new(UnfollowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WaitForSnapshotInitParameters) DeepCopyInto(out *WaitForSnapshotInitParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WaitForSnapshotInitParameters.
func (in *WaitForSnapshotInitParameters) DeepCopy() *WaitForSnapshotInitParameters {
	if in == nil {
		return nil
	}
	out := new(WaitForSnapshotInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WaitForSnapshotObservation) DeepCopyInto(out *WaitForSnapshotObservation) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WaitForSnapshotObservation.
func (in *WaitForSnapshotObservation) DeepCopy() *WaitForSnapshotObservation {
	if in == nil {
		return nil
	}
	out := new(WaitForSnapshotObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WaitForSnapshotParameters) DeepCopyInto(out *WaitForSnapshotParameters) {
	*out = *in
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WaitForSnapshotParameters.
func (in *WaitForSnapshotParameters) DeepCopy() *WaitForSnapshotParameters {
	if in == nil {
		return nil
	}
	out := new(WaitForSnapshotParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmAllocateInitParameters) DeepCopyInto(out *WarmAllocateInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmAllocateInitParameters.
func (in *WarmAllocateInitParameters) DeepCopy() *WarmAllocateInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmAllocateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmAllocateObservation) DeepCopyInto(out *WarmAllocateObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmAllocateObservation.
func (in *WarmAllocateObservation) DeepCopy() *WarmAllocateObservation {
	if in == nil {
		return nil
	}
	out := new(WarmAllocateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmAllocateParameters) DeepCopyInto(out *WarmAllocateParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = new(string)
		**out = **in
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = new(string)
		**out = **in
	}
	if in.NumberOfReplicas != nil {
		in, out := &in.NumberOfReplicas, &out.NumberOfReplicas
		*out = new(float64)
		**out = **in
	}
	if in.Require != nil {
		in, out := &in.Require, &out.Require
		*out = new(string)
		**out = **in
	}
	if in.TotalShardsPerNode != nil {
		in, out := &in.TotalShardsPerNode, &out.TotalShardsPerNode
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmAllocateParameters.
func (in *WarmAllocateParameters) DeepCopy() *WarmAllocateParameters {
	if in == nil {
		return nil
	}
	out := new(WarmAllocateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmForcemergeInitParameters) DeepCopyInto(out *WarmForcemergeInitParameters) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmForcemergeInitParameters.
func (in *WarmForcemergeInitParameters) DeepCopy() *WarmForcemergeInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmForcemergeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmForcemergeObservation) DeepCopyInto(out *WarmForcemergeObservation) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmForcemergeObservation.
func (in *WarmForcemergeObservation) DeepCopy() *WarmForcemergeObservation {
	if in == nil {
		return nil
	}
	out := new(WarmForcemergeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmForcemergeParameters) DeepCopyInto(out *WarmForcemergeParameters) {
	*out = *in
	if in.IndexCodec != nil {
		in, out := &in.IndexCodec, &out.IndexCodec
		*out = new(string)
		**out = **in
	}
	if in.MaxNumSegments != nil {
		in, out := &in.MaxNumSegments, &out.MaxNumSegments
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmForcemergeParameters.
func (in *WarmForcemergeParameters) DeepCopy() *WarmForcemergeParameters {
	if in == nil {
		return nil
	}
	out := new(WarmForcemergeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmInitParameters) DeepCopyInto(out *WarmInitParameters) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]WarmAllocateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]WarmForcemergeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]WarmMigrateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]WarmReadonlyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]WarmSetPriorityInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]WarmShrinkInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]WarmUnfollowInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmInitParameters.
func (in *WarmInitParameters) DeepCopy() *WarmInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmMigrateInitParameters) DeepCopyInto(out *WarmMigrateInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmMigrateInitParameters.
func (in *WarmMigrateInitParameters) DeepCopy() *WarmMigrateInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmMigrateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmMigrateObservation) DeepCopyInto(out *WarmMigrateObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmMigrateObservation.
func (in *WarmMigrateObservation) DeepCopy() *WarmMigrateObservation {
	if in == nil {
		return nil
	}
	out := new(WarmMigrateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmMigrateParameters) DeepCopyInto(out *WarmMigrateParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmMigrateParameters.
func (in *WarmMigrateParameters) DeepCopy() *WarmMigrateParameters {
	if in == nil {
		return nil
	}
	out := new(WarmMigrateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmObservation) DeepCopyInto(out *WarmObservation) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]WarmAllocateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]WarmForcemergeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]WarmMigrateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]WarmReadonlyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]WarmSetPriorityObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]WarmShrinkObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]WarmUnfollowObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmObservation.
func (in *WarmObservation) DeepCopy() *WarmObservation {
	if in == nil {
		return nil
	}
	out := new(WarmObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmParameters) DeepCopyInto(out *WarmParameters) {
	*out = *in
	if in.Allocate != nil {
		in, out := &in.Allocate, &out.Allocate
		*out = make([]WarmAllocateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Forcemerge != nil {
		in, out := &in.Forcemerge, &out.Forcemerge
		*out = make([]WarmForcemergeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Migrate != nil {
		in, out := &in.Migrate, &out.Migrate
		*out = make([]WarmMigrateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MinAge != nil {
		in, out := &in.MinAge, &out.MinAge
		*out = new(string)
		**out = **in
	}
	if in.Readonly != nil {
		in, out := &in.Readonly, &out.Readonly
		*out = make([]WarmReadonlyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SetPriority != nil {
		in, out := &in.SetPriority, &out.SetPriority
		*out = make([]WarmSetPriorityParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Shrink != nil {
		in, out := &in.Shrink, &out.Shrink
		*out = make([]WarmShrinkParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Unfollow != nil {
		in, out := &in.Unfollow, &out.Unfollow
		*out = make([]WarmUnfollowParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmParameters.
func (in *WarmParameters) DeepCopy() *WarmParameters {
	if in == nil {
		return nil
	}
	out := new(WarmParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmReadonlyInitParameters) DeepCopyInto(out *WarmReadonlyInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmReadonlyInitParameters.
func (in *WarmReadonlyInitParameters) DeepCopy() *WarmReadonlyInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmReadonlyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmReadonlyObservation) DeepCopyInto(out *WarmReadonlyObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmReadonlyObservation.
func (in *WarmReadonlyObservation) DeepCopy() *WarmReadonlyObservation {
	if in == nil {
		return nil
	}
	out := new(WarmReadonlyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmReadonlyParameters) DeepCopyInto(out *WarmReadonlyParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmReadonlyParameters.
func (in *WarmReadonlyParameters) DeepCopy() *WarmReadonlyParameters {
	if in == nil {
		return nil
	}
	out := new(WarmReadonlyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmSetPriorityInitParameters) DeepCopyInto(out *WarmSetPriorityInitParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmSetPriorityInitParameters.
func (in *WarmSetPriorityInitParameters) DeepCopy() *WarmSetPriorityInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmSetPriorityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmSetPriorityObservation) DeepCopyInto(out *WarmSetPriorityObservation) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmSetPriorityObservation.
func (in *WarmSetPriorityObservation) DeepCopy() *WarmSetPriorityObservation {
	if in == nil {
		return nil
	}
	out := new(WarmSetPriorityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmSetPriorityParameters) DeepCopyInto(out *WarmSetPriorityParameters) {
	*out = *in
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmSetPriorityParameters.
func (in *WarmSetPriorityParameters) DeepCopy() *WarmSetPriorityParameters {
	if in == nil {
		return nil
	}
	out := new(WarmSetPriorityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmShrinkInitParameters) DeepCopyInto(out *WarmShrinkInitParameters) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmShrinkInitParameters.
func (in *WarmShrinkInitParameters) DeepCopy() *WarmShrinkInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmShrinkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmShrinkObservation) DeepCopyInto(out *WarmShrinkObservation) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmShrinkObservation.
func (in *WarmShrinkObservation) DeepCopy() *WarmShrinkObservation {
	if in == nil {
		return nil
	}
	out := new(WarmShrinkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmShrinkParameters) DeepCopyInto(out *WarmShrinkParameters) {
	*out = *in
	if in.MaxPrimaryShardSize != nil {
		in, out := &in.MaxPrimaryShardSize, &out.MaxPrimaryShardSize
		*out = new(string)
		**out = **in
	}
	if in.NumberOfShards != nil {
		in, out := &in.NumberOfShards, &out.NumberOfShards
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmShrinkParameters.
func (in *WarmShrinkParameters) DeepCopy() *WarmShrinkParameters {
	if in == nil {
		return nil
	}
	out := new(WarmShrinkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmUnfollowInitParameters) DeepCopyInto(out *WarmUnfollowInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmUnfollowInitParameters.
func (in *WarmUnfollowInitParameters) DeepCopy() *WarmUnfollowInitParameters {
	if in == nil {
		return nil
	}
	out := new(WarmUnfollowInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmUnfollowObservation) DeepCopyInto(out *WarmUnfollowObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmUnfollowObservation.
func (in *WarmUnfollowObservation) DeepCopy() *WarmUnfollowObservation {
	if in == nil {
		return nil
	}
	out := new(WarmUnfollowObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmUnfollowParameters) DeepCopyInto(out *WarmUnfollowParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmUnfollowParameters.
func (in *WarmUnfollowParameters) DeepCopy() *WarmUnfollowParameters {
	if in == nil {
		return nil
	}
	out := new(WarmUnfollowParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Watch) DeepCopyInto(out *Watch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Watch.
func (in *Watch) DeepCopy() *Watch {
	if in == nil {
		return nil
	}
	out := new(Watch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Watch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchInitParameters) DeepCopyInto(out *WatchInitParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.ThrottlePeriodInMillis != nil {
		in, out := &in.ThrottlePeriodInMillis, &out.ThrottlePeriodInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Transform != nil {
		in, out := &in.Transform, &out.Transform
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.WatchID != nil {
		in, out := &in.WatchID, &out.WatchID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchInitParameters.
func (in *WatchInitParameters) DeepCopy() *WatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(WatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchList) DeepCopyInto(out *WatchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Watch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchList.
func (in *WatchList) DeepCopy() *WatchList {
	if in == nil {
		return nil
	}
	out := new(WatchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WatchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchObservation) DeepCopyInto(out *WatchObservation) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.ThrottlePeriodInMillis != nil {
		in, out := &in.ThrottlePeriodInMillis, &out.ThrottlePeriodInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Transform != nil {
		in, out := &in.Transform, &out.Transform
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.WatchID != nil {
		in, out := &in.WatchID, &out.WatchID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchObservation.
func (in *WatchObservation) DeepCopy() *WatchObservation {
	if in == nil {
		return nil
	}
	out := new(WatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchParameters) DeepCopyInto(out *WatchParameters) {
	*out = *in
	if in.Actions != nil {
		in, out := &in.Actions, &out.Actions
		*out = new(string)
		**out = **in
	}
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Input != nil {
		in, out := &in.Input, &out.Input
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.ThrottlePeriodInMillis != nil {
		in, out := &in.ThrottlePeriodInMillis, &out.ThrottlePeriodInMillis
		*out = new(float64)
		**out = **in
	}
	if in.Transform != nil {
		in, out := &in.Transform, &out.Transform
		*out = new(string)
		**out = **in
	}
	if in.Trigger != nil {
		in, out := &in.Trigger, &out.Trigger
		*out = new(string)
		**out = **in
	}
	if in.WatchID != nil {
		in, out := &in.WatchID, &out.WatchID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchParameters.
func (in *WatchParameters) DeepCopy() *WatchParameters {
	if in == nil {
		return nil
	}
	out := new(WatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchSpec) DeepCopyInto(out *WatchSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchSpec.
func (in *WatchSpec) DeepCopy() *WatchSpec {
	if in == nil {
		return nil
	}
	out := new(WatchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WatchStatus) DeepCopyInto(out *WatchStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WatchStatus.
func (in *WatchStatus) DeepCopy() *WatchStatus {
	if in == nil {
		return nil
	}
	out := new(WatchStatus)
	in.DeepCopyInto(out)
	return out
}
