/*
Copyright Elasticsearch B.V. All rights reserved.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IndexAliasInitParameters struct {

	// (String) Query used to limit documents the alias can access.
	// Query used to limit documents the alias can access.
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) Value used to route indexing operations to a specific shard. If specified, this overwrites the routing value for indexing operations.
	// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
	IndexRouting *string `json:"indexRouting,omitempty" tf:"index_routing,omitempty"`

	// (Boolean) If true, the alias is hidden.
	// If true, the alias is hidden.
	IsHidden *bool `json:"isHidden,omitempty" tf:"is_hidden,omitempty"`

	// (Boolean) If true, the index is the write index for the alias.
	// If true, the index is the write index for the alias.
	IsWriteIndex *bool `json:"isWriteIndex,omitempty" tf:"is_write_index,omitempty"`

	// (String) Name of the index you wish to create.
	// Index alias name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Value used to route indexing and search operations to a specific shard.
	// Value used to route indexing and search operations to a specific shard.
	Routing *string `json:"routing,omitempty" tf:"routing,omitempty"`

	// (String) Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	SearchRouting *string `json:"searchRouting,omitempty" tf:"search_routing,omitempty"`
}

type IndexAliasObservation struct {

	// (String) Query used to limit documents the alias can access.
	// Query used to limit documents the alias can access.
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) Value used to route indexing operations to a specific shard. If specified, this overwrites the routing value for indexing operations.
	// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
	IndexRouting *string `json:"indexRouting,omitempty" tf:"index_routing,omitempty"`

	// (Boolean) If true, the alias is hidden.
	// If true, the alias is hidden.
	IsHidden *bool `json:"isHidden,omitempty" tf:"is_hidden,omitempty"`

	// (Boolean) If true, the index is the write index for the alias.
	// If true, the index is the write index for the alias.
	IsWriteIndex *bool `json:"isWriteIndex,omitempty" tf:"is_write_index,omitempty"`

	// (String) Name of the index you wish to create.
	// Index alias name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Value used to route indexing and search operations to a specific shard.
	// Value used to route indexing and search operations to a specific shard.
	Routing *string `json:"routing,omitempty" tf:"routing,omitempty"`

	// (String) Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	SearchRouting *string `json:"searchRouting,omitempty" tf:"search_routing,omitempty"`
}

type IndexAliasParameters struct {

	// (String) Query used to limit documents the alias can access.
	// Query used to limit documents the alias can access.
	// +kubebuilder:validation:Optional
	Filter *string `json:"filter,omitempty" tf:"filter,omitempty"`

	// (String) Value used to route indexing operations to a specific shard. If specified, this overwrites the routing value for indexing operations.
	// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
	// +kubebuilder:validation:Optional
	IndexRouting *string `json:"indexRouting,omitempty" tf:"index_routing,omitempty"`

	// (Boolean) If true, the alias is hidden.
	// If true, the alias is hidden.
	// +kubebuilder:validation:Optional
	IsHidden *bool `json:"isHidden,omitempty" tf:"is_hidden,omitempty"`

	// (Boolean) If true, the index is the write index for the alias.
	// If true, the index is the write index for the alias.
	// +kubebuilder:validation:Optional
	IsWriteIndex *bool `json:"isWriteIndex,omitempty" tf:"is_write_index,omitempty"`

	// (String) Name of the index you wish to create.
	// Index alias name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) Value used to route indexing and search operations to a specific shard.
	// Value used to route indexing and search operations to a specific shard.
	// +kubebuilder:validation:Optional
	Routing *string `json:"routing,omitempty" tf:"routing,omitempty"`

	// (String) Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	// +kubebuilder:validation:Optional
	SearchRouting *string `json:"searchRouting,omitempty" tf:"search_routing,omitempty"`
}

type IndexElasticsearchConnectionInitParameters struct {

	// (String, Sensitive) API Key to use for authentication to Elasticsearch
	// API Key to use for authentication to Elasticsearch
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	Endpoints []*string `json:"endpointsSecretRef,omitempty" tf:"-"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String, Sensitive) PEM encoded private key for client auth
	// PEM encoded private key for client auth
	KeyDataSecretRef *v1.SecretKeySelector `json:"keyDataSecretRef,omitempty" tf:"-"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String, Sensitive) Password to use for API authentication to Elasticsearch.
	// Password to use for API authentication to Elasticsearch.
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type IndexElasticsearchConnectionObservation struct {

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type IndexElasticsearchConnectionParameters struct {

	// (String, Sensitive) API Key to use for authentication to Elasticsearch
	// API Key to use for authentication to Elasticsearch
	// +kubebuilder:validation:Optional
	APIKeySecretRef *v1.SecretKeySelector `json:"apiKeySecretRef,omitempty" tf:"-"`

	// encoded custom Certificate Authority certificate
	// PEM-encoded custom Certificate Authority certificate
	// +kubebuilder:validation:Optional
	CAData *string `json:"caData,omitempty" tf:"ca_data,omitempty"`

	// (String) Path to a custom Certificate Authority certificate
	// Path to a custom Certificate Authority certificate
	// +kubebuilder:validation:Optional
	CAFile *string `json:"caFile,omitempty" tf:"ca_file,omitempty"`

	// (String) PEM encoded certificate for client auth
	// PEM encoded certificate for client auth
	// +kubebuilder:validation:Optional
	CertData *string `json:"certData,omitempty" tf:"cert_data,omitempty"`

	// (String) Path to a file containing the PEM encoded certificate for client auth
	// Path to a file containing the PEM encoded certificate for client auth
	// +kubebuilder:validation:Optional
	CertFile *string `json:"certFile,omitempty" tf:"cert_file,omitempty"`

	// +kubebuilder:validation:Optional
	EndpointsSecretRef *[]v1.SecretKeySelector `json:"endpointsSecretRef,omitempty" tf:"-"`

	// (Boolean) Disable TLS certificate validation
	// Disable TLS certificate validation
	// +kubebuilder:validation:Optional
	Insecure *bool `json:"insecure,omitempty" tf:"insecure,omitempty"`

	// (String, Sensitive) PEM encoded private key for client auth
	// PEM encoded private key for client auth
	// +kubebuilder:validation:Optional
	KeyDataSecretRef *v1.SecretKeySelector `json:"keyDataSecretRef,omitempty" tf:"-"`

	// (String) Path to a file containing the PEM encoded private key for client auth
	// Path to a file containing the PEM encoded private key for client auth
	// +kubebuilder:validation:Optional
	KeyFile *string `json:"keyFile,omitempty" tf:"key_file,omitempty"`

	// (String, Sensitive) Password to use for API authentication to Elasticsearch.
	// Password to use for API authentication to Elasticsearch.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.SecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// (String) Username to use for API authentication to Elasticsearch.
	// Username to use for API authentication to Elasticsearch.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type IndexInitParameters struct {

	// (Block Set) Aliases for the index. (see below for nested schema)
	// Aliases for the index.
	Alias []IndexAliasInitParameters `json:"alias,omitempty" tf:"alias,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (Number) The maximum number of tokens that can be produced using _analyze API.
	// The maximum number of tokens that can be produced using _analyze API.
	AnalyzeMaxTokenCount *float64 `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	ElasticsearchConnection []IndexElasticsearchConnectionInitParameters `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (String) Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	// Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	FinalPipeline *string `json:"finalPipeline,omitempty" tf:"final_pipeline,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (Number) The maximum number of characters that will be analyzed for a highlight request.
	// The maximum number of characters that will be analyzed for a highlight request.
	HighlightMaxAnalyzedOffset *float64 `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (Boolean) If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	// If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	IncludeTypeName *bool `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (Boolean) Set index level coercion setting that is applied to all mapping types.
	// Set index level coercion setting that is applied to all mapping types.
	MappingCoerce *bool `json:"mappingCoerce,omitempty" tf:"mapping_coerce,omitempty"`

	// (String) Mapping for fields in the index.
	// If specified, this mapping can include: field names, field data types, mapping parameters.
	// NOTE:
	// Mapping for fields in the index.
	// If specified, this mapping can include: field names, [field data types](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html), [mapping parameters](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html).
	// **NOTE:**
	// - Changing datatypes in the existing _mappings_ will force index to be re-created.
	// - Removing field will be ignored by default same as elasticsearch. You need to recreate the index to remove field completely.
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	MasterTimeout *string `json:"masterTimeout,omitempty" tf:"master_timeout,omitempty"`

	// (Number) The maximum number of docvalue_fields that are allowed in a query.
	// The maximum number of `docvalue_fields` that are allowed in a query.
	MaxDocvalueFieldsSearch *float64 `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (Number) The maximum value of from + size for inner hits definition and top hits aggregations to this index.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index.
	MaxInnerResultWindow *float64 `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (Number) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	MaxNgramDiff *float64 `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (Number) Maximum number of refresh listeners available on each shard of the index.
	// Maximum number of refresh listeners available on each shard of the index.
	MaxRefreshListeners *float64 `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (Number) The maximum length of regex that can be used in Regexp Query.
	// The maximum length of regex that can be used in Regexp Query.
	MaxRegexLength *float64 `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (Number) The maximum value of window_size for rescore requests in searches of this index.
	// The maximum value of `window_size` for `rescore` requests in searches of this index.
	MaxRescoreWindow *float64 `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (Number) The maximum value of from + size for searches to this index.
	// The maximum value of `from + size` for searches to this index.
	MaxResultWindow *float64 `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (Number) The maximum number of script_fields that are allowed in a query.
	// The maximum number of `script_fields` that are allowed in a query.
	MaxScriptFields *float64 `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (Number) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	MaxShingleDiff *float64 `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (Number) The maximum number of terms that can be used in Terms Query.
	// The maximum number of terms that can be used in Terms Query.
	MaxTermsCount *float64 `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index you wish to create.
	// Name of the index you wish to create.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Number of shard replicas.
	// Number of shard replicas.
	NumberOfReplicas *float64 `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (Number) Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	NumberOfRoutingShards *float64 `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (Number) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	NumberOfShards *float64 `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// level queries, excluding metadata fields.
	// Wildcard (*) patterns matching one or more fields. Defaults to '*', which matches all fields eligible for term-level queries, excluding metadata fields.
	// +listType=set
	QueryDefaultField []*string `json:"queryDefaultField,omitempty" tf:"query_default_field,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (Number) The number of shards a custom routing value can go to. This can be set only on creation.
	// The number of shards a custom routing value can go to. This can be set only on creation.
	RoutingPartitionSize *float64 `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// modules.html#index-modules-settings.
	// NOTE: Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - apply will return error (see below for nested schema)
	// DEPRECATED: Please use dedicated setting field. Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings.
	// **NOTE:** Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - _apply_ will return error
	Settings []SettingsInitParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (Set of String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	// +listType=set
	SortField []*string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (List of String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	SortOrder []*string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`

	// (String) Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (String) Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. 10s
	// Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. `10s`
	UnassignedNodeLeftDelayedTimeout *string `json:"unassignedNodeLeftDelayedTimeout,omitempty" tf:"unassigned_node_left_delayed_timeout,omitempty"`

	// (String) The number of shard copies that must be active before proceeding with the operation. Set to all or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: 1, the primary shard.
	// The number of shard copies that must be active before proceeding with the operation. Set to `all` or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: `1`, the primary shard.
	WaitForActiveShards *string `json:"waitForActiveShards,omitempty" tf:"wait_for_active_shards,omitempty"`
}

type IndexObservation struct {

	// (Block Set) Aliases for the index. (see below for nested schema)
	// Aliases for the index.
	Alias []IndexAliasObservation `json:"alias,omitempty" tf:"alias,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (Number) The maximum number of tokens that can be produced using _analyze API.
	// The maximum number of tokens that can be produced using _analyze API.
	AnalyzeMaxTokenCount *float64 `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	ElasticsearchConnection []IndexElasticsearchConnectionObservation `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (String) Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	// Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	FinalPipeline *string `json:"finalPipeline,omitempty" tf:"final_pipeline,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (Number) The maximum number of characters that will be analyzed for a highlight request.
	// The maximum number of characters that will be analyzed for a highlight request.
	HighlightMaxAnalyzedOffset *float64 `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (String) Internal identifier of the resource
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	// If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	IncludeTypeName *bool `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (Boolean) Set index level coercion setting that is applied to all mapping types.
	// Set index level coercion setting that is applied to all mapping types.
	MappingCoerce *bool `json:"mappingCoerce,omitempty" tf:"mapping_coerce,omitempty"`

	// (String) Mapping for fields in the index.
	// If specified, this mapping can include: field names, field data types, mapping parameters.
	// NOTE:
	// Mapping for fields in the index.
	// If specified, this mapping can include: field names, [field data types](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html), [mapping parameters](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html).
	// **NOTE:**
	// - Changing datatypes in the existing _mappings_ will force index to be re-created.
	// - Removing field will be ignored by default same as elasticsearch. You need to recreate the index to remove field completely.
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	MasterTimeout *string `json:"masterTimeout,omitempty" tf:"master_timeout,omitempty"`

	// (Number) The maximum number of docvalue_fields that are allowed in a query.
	// The maximum number of `docvalue_fields` that are allowed in a query.
	MaxDocvalueFieldsSearch *float64 `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (Number) The maximum value of from + size for inner hits definition and top hits aggregations to this index.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index.
	MaxInnerResultWindow *float64 `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (Number) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	MaxNgramDiff *float64 `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (Number) Maximum number of refresh listeners available on each shard of the index.
	// Maximum number of refresh listeners available on each shard of the index.
	MaxRefreshListeners *float64 `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (Number) The maximum length of regex that can be used in Regexp Query.
	// The maximum length of regex that can be used in Regexp Query.
	MaxRegexLength *float64 `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (Number) The maximum value of window_size for rescore requests in searches of this index.
	// The maximum value of `window_size` for `rescore` requests in searches of this index.
	MaxRescoreWindow *float64 `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (Number) The maximum value of from + size for searches to this index.
	// The maximum value of `from + size` for searches to this index.
	MaxResultWindow *float64 `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (Number) The maximum number of script_fields that are allowed in a query.
	// The maximum number of `script_fields` that are allowed in a query.
	MaxScriptFields *float64 `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (Number) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	MaxShingleDiff *float64 `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (Number) The maximum number of terms that can be used in Terms Query.
	// The maximum number of terms that can be used in Terms Query.
	MaxTermsCount *float64 `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index you wish to create.
	// Name of the index you wish to create.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Number of shard replicas.
	// Number of shard replicas.
	NumberOfReplicas *float64 `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (Number) Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	NumberOfRoutingShards *float64 `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (Number) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	NumberOfShards *float64 `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// level queries, excluding metadata fields.
	// Wildcard (*) patterns matching one or more fields. Defaults to '*', which matches all fields eligible for term-level queries, excluding metadata fields.
	// +listType=set
	QueryDefaultField []*string `json:"queryDefaultField,omitempty" tf:"query_default_field,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (Number) The number of shards a custom routing value can go to. This can be set only on creation.
	// The number of shards a custom routing value can go to. This can be set only on creation.
	RoutingPartitionSize *float64 `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// modules.html#index-modules-settings.
	// NOTE: Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - apply will return error (see below for nested schema)
	// DEPRECATED: Please use dedicated setting field. Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings.
	// **NOTE:** Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - _apply_ will return error
	Settings []SettingsObservation `json:"settings,omitempty" tf:"settings,omitempty"`

	// (String) All raw settings fetched from the cluster.
	// All raw settings fetched from the cluster.
	SettingsRaw *string `json:"settingsRaw,omitempty" tf:"settings_raw,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (Set of String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	// +listType=set
	SortField []*string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (List of String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	SortOrder []*string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`

	// (String) Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (String) Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. 10s
	// Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. `10s`
	UnassignedNodeLeftDelayedTimeout *string `json:"unassignedNodeLeftDelayedTimeout,omitempty" tf:"unassigned_node_left_delayed_timeout,omitempty"`

	// (String) The number of shard copies that must be active before proceeding with the operation. Set to all or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: 1, the primary shard.
	// The number of shard copies that must be active before proceeding with the operation. Set to `all` or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: `1`, the primary shard.
	WaitForActiveShards *string `json:"waitForActiveShards,omitempty" tf:"wait_for_active_shards,omitempty"`
}

type IndexParameters struct {

	// (Block Set) Aliases for the index. (see below for nested schema)
	// Aliases for the index.
	// +kubebuilder:validation:Optional
	Alias []IndexAliasParameters `json:"alias,omitempty" tf:"alias,omitempty"`

	// (String) A JSON string describing the analyzers applied to the index.
	// A JSON string describing the analyzers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisAnalyzer *string `json:"analysisAnalyzer,omitempty" tf:"analysis_analyzer,omitempty"`

	// (String) A JSON string describing the char_filters applied to the index.
	// A JSON string describing the char_filters applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisCharFilter *string `json:"analysisCharFilter,omitempty" tf:"analysis_char_filter,omitempty"`

	// (String) A JSON string describing the filters applied to the index.
	// A JSON string describing the filters applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisFilter *string `json:"analysisFilter,omitempty" tf:"analysis_filter,omitempty"`

	// (String) A JSON string describing the normalizers applied to the index.
	// A JSON string describing the normalizers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisNormalizer *string `json:"analysisNormalizer,omitempty" tf:"analysis_normalizer,omitempty"`

	// (String) A JSON string describing the tokenizers applied to the index.
	// A JSON string describing the tokenizers applied to the index.
	// +kubebuilder:validation:Optional
	AnalysisTokenizer *string `json:"analysisTokenizer,omitempty" tf:"analysis_tokenizer,omitempty"`

	// (Number) The maximum number of tokens that can be produced using _analyze API.
	// The maximum number of tokens that can be produced using _analyze API.
	// +kubebuilder:validation:Optional
	AnalyzeMaxTokenCount *float64 `json:"analyzeMaxTokenCount,omitempty" tf:"analyze_max_token_count,omitempty"`

	// 5) or use all for the upper bound (e.g. 0-all)
	// Set the number of replicas to the node count in the cluster. Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all)
	// +kubebuilder:validation:Optional
	AutoExpandReplicas *string `json:"autoExpandReplicas,omitempty" tf:"auto_expand_replicas,omitempty"`

	// (Boolean) Set to true to disable index metadata reads and writes.
	// Set to `true` to disable index metadata reads and writes.
	// +kubebuilder:validation:Optional
	BlocksMetadata *bool `json:"blocksMetadata,omitempty" tf:"blocks_metadata,omitempty"`

	// (Boolean) Set to true to disable read operations against the index.
	// Set to `true` to disable read operations against the index.
	// +kubebuilder:validation:Optional
	BlocksRead *bool `json:"blocksRead,omitempty" tf:"blocks_read,omitempty"`

	// (Boolean) Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
	// Set to `true` to make the index and index metadata read only, `false` to allow writes and metadata changes.
	// +kubebuilder:validation:Optional
	BlocksReadOnly *bool `json:"blocksReadOnly,omitempty" tf:"blocks_read_only,omitempty"`

	// (Boolean) Identical to index.blocks.read_only but allows deleting the index to free up resources.
	// Identical to `index.blocks.read_only` but allows deleting the index to free up resources.
	// +kubebuilder:validation:Optional
	BlocksReadOnlyAllowDelete *bool `json:"blocksReadOnlyAllowDelete,omitempty" tf:"blocks_read_only_allow_delete,omitempty"`

	// (Boolean) Set to true to disable data write operations against the index. This setting does not affect metadata.
	// Set to `true` to disable data write operations against the index. This setting does not affect metadata.
	// +kubebuilder:validation:Optional
	BlocksWrite *bool `json:"blocksWrite,omitempty" tf:"blocks_write,omitempty"`

	// (String) The default value compresses stored data with LZ4 compression, but this can be set to best_compression which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// The `default` value compresses stored data with LZ4 compression, but this can be set to `best_compression` which uses DEFLATE for a higher compression ratio. This can be set only on creation.
	// +kubebuilder:validation:Optional
	Codec *string `json:"codec,omitempty" tf:"codec,omitempty"`

	// (String) The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// The default ingest node pipeline for this index. Index requests will fail if the default pipeline is set and the pipeline does not exist.
	// +kubebuilder:validation:Optional
	DefaultPipeline *string `json:"defaultPipeline,omitempty" tf:"default_pipeline,omitempty"`

	// +kubebuilder:validation:Optional
	DeletionProtection *bool `json:"deletionProtection,omitempty" tf:"deletion_protection,omitempty"`

	// (Block List, Max: 1, Deprecated) Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead. (see below for nested schema)
	// Elasticsearch connection configuration block. This property will be removed in a future provider version. Configure the Elasticsearch connection via the provider configuration instead.
	// +kubebuilder:validation:Optional
	ElasticsearchConnection []IndexElasticsearchConnectionParameters `json:"elasticsearchConnection,omitempty" tf:"elasticsearch_connection,omitempty"`

	// (String) Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	// Final ingest pipeline for the index. Indexing requests will fail if the final pipeline is set and the pipeline does not exist. The final pipeline always runs after the request pipeline (if specified) and the default pipeline (if it exists). The special pipeline name _none indicates no ingest pipeline will run.
	// +kubebuilder:validation:Optional
	FinalPipeline *string `json:"finalPipeline,omitempty" tf:"final_pipeline,omitempty"`

	// (String) The length of time that a deleted document's version number remains available for further versioned operations.
	// The length of time that a deleted document's version number remains available for further versioned operations.
	// +kubebuilder:validation:Optional
	GcDeletes *string `json:"gcDeletes,omitempty" tf:"gc_deletes,omitempty"`

	// (Number) The maximum number of characters that will be analyzed for a highlight request.
	// The maximum number of characters that will be analyzed for a highlight request.
	// +kubebuilder:validation:Optional
	HighlightMaxAnalyzedOffset *float64 `json:"highlightMaxAnalyzedOffset,omitempty" tf:"highlight_max_analyzed_offset,omitempty"`

	// (Boolean) If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	// If true, a mapping type is expected in the body of mappings. Defaults to false. Supported for Elasticsearch 7.x.
	// +kubebuilder:validation:Optional
	IncludeTypeName *bool `json:"includeTypeName,omitempty" tf:"include_type_name,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	// +kubebuilder:validation:Optional
	IndexingSlowlogLevel *string `json:"indexingSlowlogLevel,omitempty" tf:"indexing_slowlog_level,omitempty"`

	// (String) Set the number of characters of the _source to include in the slowlog lines, false or 0 will skip logging the source entirely and setting it to true will log the entire source regardless of size. The original _source is reformatted by default to make sure that it fits on a single log line.
	// Set the number of characters of the `_source` to include in the slowlog lines, `false` or `0` will skip logging the source entirely and setting it to `true` will log the entire source regardless of size. The original `_source` is reformatted by default to make sure that it fits on a single log line.
	// +kubebuilder:validation:Optional
	IndexingSlowlogSource *string `json:"indexingSlowlogSource,omitempty" tf:"indexing_slowlog_source,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexDebug *string `json:"indexingSlowlogThresholdIndexDebug,omitempty" tf:"indexing_slowlog_threshold_index_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexInfo *string `json:"indexingSlowlogThresholdIndexInfo,omitempty" tf:"indexing_slowlog_threshold_index_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexTrace *string `json:"indexingSlowlogThresholdIndexTrace,omitempty" tf:"indexing_slowlog_threshold_index_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches for indexing queries, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	IndexingSlowlogThresholdIndexWarn *string `json:"indexingSlowlogThresholdIndexWarn,omitempty" tf:"indexing_slowlog_threshold_index_warn,omitempty"`

	// loaded for nested queries. This can be set only on creation.
	// Indicates whether cached filters are pre-loaded for nested queries. This can be set only on creation.
	// +kubebuilder:validation:Optional
	LoadFixedBitsetFiltersEagerly *bool `json:"loadFixedBitsetFiltersEagerly,omitempty" tf:"load_fixed_bitset_filters_eagerly,omitempty"`

	// (Boolean) Set index level coercion setting that is applied to all mapping types.
	// Set index level coercion setting that is applied to all mapping types.
	// +kubebuilder:validation:Optional
	MappingCoerce *bool `json:"mappingCoerce,omitempty" tf:"mapping_coerce,omitempty"`

	// (String) Mapping for fields in the index.
	// If specified, this mapping can include: field names, field data types, mapping parameters.
	// NOTE:
	// Mapping for fields in the index.
	// If specified, this mapping can include: field names, [field data types](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-types.html), [mapping parameters](https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-params.html).
	// **NOTE:**
	// - Changing datatypes in the existing _mappings_ will force index to be re-created.
	// - Removing field will be ignored by default same as elasticsearch. You need to recreate the index to remove field completely.
	// +kubebuilder:validation:Optional
	Mappings *string `json:"mappings,omitempty" tf:"mappings,omitempty"`

	// (String) Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a connection to the master node. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	// +kubebuilder:validation:Optional
	MasterTimeout *string `json:"masterTimeout,omitempty" tf:"master_timeout,omitempty"`

	// (Number) The maximum number of docvalue_fields that are allowed in a query.
	// The maximum number of `docvalue_fields` that are allowed in a query.
	// +kubebuilder:validation:Optional
	MaxDocvalueFieldsSearch *float64 `json:"maxDocvalueFieldsSearch,omitempty" tf:"max_docvalue_fields_search,omitempty"`

	// (Number) The maximum value of from + size for inner hits definition and top hits aggregations to this index.
	// The maximum value of `from + size` for inner hits definition and top hits aggregations to this index.
	// +kubebuilder:validation:Optional
	MaxInnerResultWindow *float64 `json:"maxInnerResultWindow,omitempty" tf:"max_inner_result_window,omitempty"`

	// (Number) The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	// The maximum allowed difference between min_gram and max_gram for NGramTokenizer and NGramTokenFilter.
	// +kubebuilder:validation:Optional
	MaxNgramDiff *float64 `json:"maxNgramDiff,omitempty" tf:"max_ngram_diff,omitempty"`

	// (Number) Maximum number of refresh listeners available on each shard of the index.
	// Maximum number of refresh listeners available on each shard of the index.
	// +kubebuilder:validation:Optional
	MaxRefreshListeners *float64 `json:"maxRefreshListeners,omitempty" tf:"max_refresh_listeners,omitempty"`

	// (Number) The maximum length of regex that can be used in Regexp Query.
	// The maximum length of regex that can be used in Regexp Query.
	// +kubebuilder:validation:Optional
	MaxRegexLength *float64 `json:"maxRegexLength,omitempty" tf:"max_regex_length,omitempty"`

	// (Number) The maximum value of window_size for rescore requests in searches of this index.
	// The maximum value of `window_size` for `rescore` requests in searches of this index.
	// +kubebuilder:validation:Optional
	MaxRescoreWindow *float64 `json:"maxRescoreWindow,omitempty" tf:"max_rescore_window,omitempty"`

	// (Number) The maximum value of from + size for searches to this index.
	// The maximum value of `from + size` for searches to this index.
	// +kubebuilder:validation:Optional
	MaxResultWindow *float64 `json:"maxResultWindow,omitempty" tf:"max_result_window,omitempty"`

	// (Number) The maximum number of script_fields that are allowed in a query.
	// The maximum number of `script_fields` that are allowed in a query.
	// +kubebuilder:validation:Optional
	MaxScriptFields *float64 `json:"maxScriptFields,omitempty" tf:"max_script_fields,omitempty"`

	// (Number) The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	// The maximum allowed difference between max_shingle_size and min_shingle_size for ShingleTokenFilter.
	// +kubebuilder:validation:Optional
	MaxShingleDiff *float64 `json:"maxShingleDiff,omitempty" tf:"max_shingle_diff,omitempty"`

	// (Number) The maximum number of terms that can be used in Terms Query.
	// The maximum number of terms that can be used in Terms Query.
	// +kubebuilder:validation:Optional
	MaxTermsCount *float64 `json:"maxTermsCount,omitempty" tf:"max_terms_count,omitempty"`

	// (String) Name of the index you wish to create.
	// Name of the index you wish to create.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Number) Number of shard replicas.
	// Number of shard replicas.
	// +kubebuilder:validation:Optional
	NumberOfReplicas *float64 `json:"numberOfReplicas,omitempty" tf:"number_of_replicas,omitempty"`

	// (Number) Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	// Value used with number_of_shards to route documents to a primary shard. This can be set only on creation.
	// +kubebuilder:validation:Optional
	NumberOfRoutingShards *float64 `json:"numberOfRoutingShards,omitempty" tf:"number_of_routing_shards,omitempty"`

	// (Number) Number of shards for the index. This can be set only on creation.
	// Number of shards for the index. This can be set only on creation.
	// +kubebuilder:validation:Optional
	NumberOfShards *float64 `json:"numberOfShards,omitempty" tf:"number_of_shards,omitempty"`

	// level queries, excluding metadata fields.
	// Wildcard (*) patterns matching one or more fields. Defaults to '*', which matches all fields eligible for term-level queries, excluding metadata fields.
	// +kubebuilder:validation:Optional
	// +listType=set
	QueryDefaultField []*string `json:"queryDefaultField,omitempty" tf:"query_default_field,omitempty"`

	// 1 to disable refresh.
	// How often to perform a refresh operation, which makes recent changes to the index visible to search. Can be set to `-1` to disable refresh.
	// +kubebuilder:validation:Optional
	RefreshInterval *string `json:"refreshInterval,omitempty" tf:"refresh_interval,omitempty"`

	// (String) Controls shard allocation for this index. It can be set to: all , primaries , new_primaries , none.
	// Controls shard allocation for this index. It can be set to: `all` , `primaries` , `new_primaries` , `none`.
	// +kubebuilder:validation:Optional
	RoutingAllocationEnable *string `json:"routingAllocationEnable,omitempty" tf:"routing_allocation_enable,omitempty"`

	// (Number) The number of shards a custom routing value can go to. This can be set only on creation.
	// The number of shards a custom routing value can go to. This can be set only on creation.
	// +kubebuilder:validation:Optional
	RoutingPartitionSize *float64 `json:"routingPartitionSize,omitempty" tf:"routing_partition_size,omitempty"`

	// (String) Enables shard rebalancing for this index. It can be set to: all, primaries , replicas , none.
	// Enables shard rebalancing for this index. It can be set to: `all`, `primaries` , `replicas` , `none`.
	// +kubebuilder:validation:Optional
	RoutingRebalanceEnable *string `json:"routingRebalanceEnable,omitempty" tf:"routing_rebalance_enable,omitempty"`

	// (String) How long a shard can not receive a search or get request until it’s considered search idle.
	// How long a shard can not receive a search or get request until it’s considered search idle.
	// +kubebuilder:validation:Optional
	SearchIdleAfter *string `json:"searchIdleAfter,omitempty" tf:"search_idle_after,omitempty"`

	// (String) Set which logging level to use for the search slow log, can be: warn, info, debug, trace
	// Set which logging level to use for the search slow log, can be: `warn`, `info`, `debug`, `trace`
	// +kubebuilder:validation:Optional
	SearchSlowlogLevel *string `json:"searchSlowlogLevel,omitempty" tf:"search_slowlog_level,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchDebug *string `json:"searchSlowlogThresholdFetchDebug,omitempty" tf:"search_slowlog_threshold_fetch_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchInfo *string `json:"searchSlowlogThresholdFetchInfo,omitempty" tf:"search_slowlog_threshold_fetch_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchTrace *string `json:"searchSlowlogThresholdFetchTrace,omitempty" tf:"search_slowlog_threshold_fetch_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the fetch phase, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdFetchWarn *string `json:"searchSlowlogThresholdFetchWarn,omitempty" tf:"search_slowlog_threshold_fetch_warn,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 2s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `2s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryDebug *string `json:"searchSlowlogThresholdQueryDebug,omitempty" tf:"search_slowlog_threshold_query_debug,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 5s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `5s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryInfo *string `json:"searchSlowlogThresholdQueryInfo,omitempty" tf:"search_slowlog_threshold_query_info,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 500ms
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `500ms`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryTrace *string `json:"searchSlowlogThresholdQueryTrace,omitempty" tf:"search_slowlog_threshold_query_trace,omitempty"`

	// (String) Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. 10s
	// Set the cutoff for shard level slow search logging of slow searches in the query phase, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	SearchSlowlogThresholdQueryWarn *string `json:"searchSlowlogThresholdQueryWarn,omitempty" tf:"search_slowlog_threshold_query_warn,omitempty"`

	// modules.html#index-modules-settings.
	// NOTE: Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - apply will return error (see below for nested schema)
	// DEPRECATED: Please use dedicated setting field. Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings.
	// **NOTE:** Static index settings (see: https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#_static_index_settings) can be only set on the index creation and later cannot be removed or updated - _apply_ will return error
	// +kubebuilder:validation:Optional
	Settings []SettingsParameters `json:"settings,omitempty" tf:"settings,omitempty"`

	// (String) Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts false, true, checksum.
	// Whether or not shards should be checked for corruption before opening. When corruption is detected, it will prevent the shard from being opened. Accepts `false`, `true`, `checksum`.
	// +kubebuilder:validation:Optional
	ShardCheckOnStartup *string `json:"shardCheckOnStartup,omitempty" tf:"shard_check_on_startup,omitempty"`

	// (Set of String) The field to sort shards in this index by.
	// The field to sort shards in this index by.
	// +kubebuilder:validation:Optional
	// +listType=set
	SortField []*string `json:"sortField,omitempty" tf:"sort_field,omitempty"`

	// (List of String) The direction to sort shards in. Accepts asc, desc.
	// The direction to sort shards in. Accepts `asc`, `desc`.
	// +kubebuilder:validation:Optional
	SortOrder []*string `json:"sortOrder,omitempty" tf:"sort_order,omitempty"`

	// (String) Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
	// Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to `30s`.
	// +kubebuilder:validation:Optional
	Timeout *string `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (String) Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. 10s
	// Time to delay the allocation of replica shards which become unassigned because a node has left, in time units, e.g. `10s`
	// +kubebuilder:validation:Optional
	UnassignedNodeLeftDelayedTimeout *string `json:"unassignedNodeLeftDelayedTimeout,omitempty" tf:"unassigned_node_left_delayed_timeout,omitempty"`

	// (String) The number of shard copies that must be active before proceeding with the operation. Set to all or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: 1, the primary shard.
	// The number of shard copies that must be active before proceeding with the operation. Set to `all` or any positive integer up to the total number of shards in the index (number_of_replicas+1). Default: `1`, the primary shard.
	// +kubebuilder:validation:Optional
	WaitForActiveShards *string `json:"waitForActiveShards,omitempty" tf:"wait_for_active_shards,omitempty"`
}

type SettingsInitParameters struct {

	// (Block Set, Min: 1) Defines the setting for the index. (see below for nested schema)
	// Defines the setting for the index.
	Setting []SettingsSettingInitParameters `json:"setting,omitempty" tf:"setting,omitempty"`
}

type SettingsObservation struct {

	// (Block Set, Min: 1) Defines the setting for the index. (see below for nested schema)
	// Defines the setting for the index.
	Setting []SettingsSettingObservation `json:"setting,omitempty" tf:"setting,omitempty"`
}

type SettingsParameters struct {

	// (Block Set, Min: 1) Defines the setting for the index. (see below for nested schema)
	// Defines the setting for the index.
	// +kubebuilder:validation:Optional
	Setting []SettingsSettingParameters `json:"setting" tf:"setting,omitempty"`
}

type SettingsSettingInitParameters struct {

	// (String) Name of the index you wish to create.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SettingsSettingObservation struct {

	// (String) Name of the index you wish to create.
	// The name of the setting to set and track.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type SettingsSettingParameters struct {

	// (String) Name of the index you wish to create.
	// The name of the setting to set and track.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// (String) The value of the setting to set and track.
	// The value of the setting to set and track.
	// +kubebuilder:validation:Optional
	Value *string `json:"value" tf:"value,omitempty"`
}

// IndexSpec defines the desired state of Index
type IndexSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IndexParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IndexInitParameters `json:"initProvider,omitempty"`
}

// IndexStatus defines the observed state of Index.
type IndexStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IndexObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Index is the Schema for the Indexs API. Creates or updates an index.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,elasticstack}
type Index struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   IndexSpec   `json:"spec"`
	Status IndexStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IndexList contains a list of Indexs
type IndexList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Index `json:"items"`
}

// Repository type metadata.
var (
	Index_Kind             = "Index"
	Index_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Index_Kind}.String()
	Index_KindAPIVersion   = Index_Kind + "." + CRDGroupVersion.String()
	Index_GroupVersionKind = CRDGroupVersion.WithKind(Index_Kind)
)

func init() {
	SchemeBuilder.Register(&Index{}, &IndexList{})
}
