/*
Copyright Elasticsearch B.V. All rights reserved.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SpaceInitParameters struct {

	// (String) The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	// The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// (String) The description for the space.
	// The description for the space.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// api-get.html).
	// The list of disabled features for the space. To get a list of available feature IDs, use the Features API (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
	DisabledFeatures []*string `json:"disabledFeatures,omitempty" tf:"disabled_features,omitempty"`

	// (String) The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	// The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) The display name for the space.
	// The display name for the space.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SpaceObservation struct {

	// (String) The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	// The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// (String) The description for the space.
	// The description for the space.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// api-get.html).
	// The list of disabled features for the space. To get a list of available feature IDs, use the Features API (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
	DisabledFeatures []*string `json:"disabledFeatures,omitempty" tf:"disabled_features,omitempty"`

	// (String) Internal identifier of the resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	// The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) The display name for the space.
	// The display name for the space.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The space ID that is part of the Kibana URL when inside the space.
	// The space ID that is part of the Kibana URL when inside the space.
	SpaceID *string `json:"spaceId,omitempty" tf:"space_id,omitempty"`
}

type SpaceParameters struct {

	// (String) The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	// The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.
	// +kubebuilder:validation:Optional
	Color *string `json:"color,omitempty" tf:"color,omitempty"`

	// (String) The description for the space.
	// The description for the space.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// api-get.html).
	// The list of disabled features for the space. To get a list of available feature IDs, use the Features API (https://www.elastic.co/guide/en/kibana/master/features-api-get.html).
	// +kubebuilder:validation:Optional
	DisabledFeatures []*string `json:"disabledFeatures,omitempty" tf:"disabled_features,omitempty"`

	// (String) The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	// The initials shown in the space avatar. By default, the initials are automatically generated from the space name. Initials must be 1 or 2 characters.
	// +kubebuilder:validation:Optional
	Initials *string `json:"initials,omitempty" tf:"initials,omitempty"`

	// (String) The display name for the space.
	// The display name for the space.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) The space ID that is part of the Kibana URL when inside the space.
	// The space ID that is part of the Kibana URL when inside the space.
	// +crossplane:generate:reference:type=github.com/elastic/provider-elasticstack/apis/kibana/v1alpha1.Space
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("space_id",true)
	// +kubebuilder:validation:Optional
	SpaceID *string `json:"spaceId,omitempty" tf:"space_id,omitempty"`

	// Reference to a Space in kibana to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDRef *v1.Reference `json:"spaceIdRef,omitempty" tf:"-"`

	// Selector for a Space in kibana to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDSelector *v1.Selector `json:"spaceIdSelector,omitempty" tf:"-"`
}

// SpaceSpec defines the desired state of Space
type SpaceSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SpaceParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SpaceInitParameters `json:"initProvider,omitempty"`
}

// SpaceStatus defines the observed state of Space.
type SpaceStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SpaceObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Space is the Schema for the Spaces API. Creates or updates a Kibana space.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,elasticstack}
type Space struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   SpaceSpec   `json:"spec"`
	Status SpaceStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SpaceList contains a list of Spaces
type SpaceList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Space `json:"items"`
}

// Repository type metadata.
var (
	Space_Kind             = "Space"
	Space_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Space_Kind}.String()
	Space_KindAPIVersion   = Space_Kind + "." + CRDGroupVersion.String()
	Space_GroupVersionKind = CRDGroupVersion.WithKind(Space_Kind)
)

func init() {
	SchemeBuilder.Register(&Space{}, &SpaceList{})
}
