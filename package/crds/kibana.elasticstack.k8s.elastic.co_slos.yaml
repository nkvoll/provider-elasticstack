---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: slos.kibana.elasticstack.k8s.elastic.co
spec:
  group: kibana.elasticstack.k8s.elastic.co
  names:
    categories:
    - crossplane
    - managed
    - elasticstack
    kind: SLO
    listKind: SLOList
    plural: slos
    singular: slo
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SLO is the Schema for the SLOs API. Creates or updates a Kibana
          SLO.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SLOSpec defines the desired state of SLO
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  apmAvailabilityIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  apmLatencyIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        threshold:
                          description: (Number)
                          type: number
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  budgetingMethod:
                    description: (String) An occurrences budgeting method uses the
                      number of good and total events during the time window. A timeslices
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices. An `occurrences` budgeting method uses the number
                      of good and total events during the time window. A `timeslices`
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices.
                    type: string
                  description:
                    description: (String) A description for the SLO. A description
                      for the SLO.
                    type: string
                  groupBy:
                    description: (String) Optional group by field to use to generate
                      an SLO per distinct value. Optional group by field to use to
                      generate an SLO per distinct value.
                    type: string
                  histogramCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  kqlCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                      type: object
                    type: array
                  metricCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: (String) The name of the SLO. The name of the SLO.
                    type: string
                  objective:
                    description: '(Block List, Min: 1, Max: 1) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target. (see below for nested schema) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target.'
                    items:
                      properties:
                        target:
                          description: (Number)
                          type: number
                        timesliceTarget:
                          description: (Number)
                          type: number
                        timesliceWindow:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  settings:
                    description: '(Block List, Max: 1) The default settings should
                      be sufficient for most users, but if needed, these properties
                      can be overwritten. (see below for nested schema) The default
                      settings should be sufficient for most users, but if needed,
                      these properties can be overwritten.'
                    items:
                      properties:
                        frequency:
                          description: (String)
                          type: string
                        syncDelay:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  spaceId:
                    description: (String) An identifier for the space. If space_id
                      is not provided, the default space is used. An identifier for
                      the space. If space_id is not provided, the default space is
                      used.
                    type: string
                  spaceIdRef:
                    description: Reference to a Space in kibana to populate spaceId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  spaceIdSelector:
                    description: Selector for a Space in kibana to populate spaceId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  timeWindow:
                    description: '(Block List, Min: 1, Max: 1) Currently support calendarAligned
                      and rolling time windows. Any duration greater than 1 day can
                      be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. 1w for one week, and type:
                      rolling. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      1M for monthly or 1w for weekly, and type: calendarAligned.
                      (see below for nested schema) Currently support `calendarAligned`
                      and `rolling` time windows. Any duration greater than 1 day
                      can be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. `1w` for one week, and type:
                      `rolling`. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      `1M` for monthly or `1w` for weekly, and type: `calendarAligned`.'
                    items:
                      properties:
                        duration:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                      type: object
                    type: array
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  apmAvailabilityIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  apmLatencyIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        threshold:
                          description: (Number)
                          type: number
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  budgetingMethod:
                    description: (String) An occurrences budgeting method uses the
                      number of good and total events during the time window. A timeslices
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices. An `occurrences` budgeting method uses the number
                      of good and total events during the time window. A `timeslices`
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices.
                    type: string
                  description:
                    description: (String) A description for the SLO. A description
                      for the SLO.
                    type: string
                  groupBy:
                    description: (String) Optional group by field to use to generate
                      an SLO per distinct value. Optional group by field to use to
                      generate an SLO per distinct value.
                    type: string
                  histogramCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  kqlCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                      type: object
                    type: array
                  metricCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: (String) The name of the SLO. The name of the SLO.
                    type: string
                  objective:
                    description: '(Block List, Min: 1, Max: 1) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target. (see below for nested schema) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target.'
                    items:
                      properties:
                        target:
                          description: (Number)
                          type: number
                        timesliceTarget:
                          description: (Number)
                          type: number
                        timesliceWindow:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  settings:
                    description: '(Block List, Max: 1) The default settings should
                      be sufficient for most users, but if needed, these properties
                      can be overwritten. (see below for nested schema) The default
                      settings should be sufficient for most users, but if needed,
                      these properties can be overwritten.'
                    items:
                      properties:
                        frequency:
                          description: (String)
                          type: string
                        syncDelay:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  timeWindow:
                    description: '(Block List, Min: 1, Max: 1) Currently support calendarAligned
                      and rolling time windows. Any duration greater than 1 day can
                      be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. 1w for one week, and type:
                      rolling. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      1M for monthly or 1w for weekly, and type: calendarAligned.
                      (see below for nested schema) Currently support `calendarAligned`
                      and `rolling` time windows. Any duration greater than 1 day
                      can be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. `1w` for one week, and type:
                      `rolling`. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      `1M` for monthly or `1w` for weekly, and type: `calendarAligned`.'
                    items:
                      properties:
                        duration:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                      type: object
                    type: array
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: budgetingMethod is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.budgetingMethod)
                || has(self.initProvider.budgetingMethod)'
            - message: description is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.description)
                || has(self.initProvider.description)'
            - message: name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || has(self.initProvider.name)'
            - message: objective is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.objective)
                || has(self.initProvider.objective)'
            - message: timeWindow is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.timeWindow)
                || has(self.initProvider.timeWindow)'
          status:
            description: SLOStatus defines the observed state of SLO.
            properties:
              atProvider:
                properties:
                  apmAvailabilityIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  apmLatencyIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        environment:
                          description: (String)
                          type: string
                        filter:
                          description: (String)
                          type: string
                        index:
                          description: (String)
                          type: string
                        service:
                          description: (String)
                          type: string
                        threshold:
                          description: (Number)
                          type: number
                        transactionName:
                          description: (String)
                          type: string
                        transactionType:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  budgetingMethod:
                    description: (String) An occurrences budgeting method uses the
                      number of good and total events during the time window. A timeslices
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices. An `occurrences` budgeting method uses the number
                      of good and total events during the time window. A `timeslices`
                      budgeting method uses the number of good slices and total slices
                      during the time window. A slice is an arbitrary time window
                      (smaller than the overall SLO time window) that is either considered
                      good or bad, calculated from the timeslice threshold and the
                      ratio of good over total events that happened during the slice
                      window. A budgeting method is required and must be either occurrences
                      or timeslices.
                    type: string
                  description:
                    description: (String) A description for the SLO. A description
                      for the SLO.
                    type: string
                  groupBy:
                    description: (String) Optional group by field to use to generate
                      an SLO per distinct value. Optional group by field to use to
                      generate an SLO per distinct value.
                    type: string
                  histogramCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              aggregation:
                                description: (String)
                                type: string
                              field:
                                description: (String)
                                type: string
                              filter:
                                description: (String)
                                type: string
                              from:
                                description: (Number)
                                type: number
                              to:
                                description: (Number)
                                type: number
                            type: object
                          type: array
                      type: object
                    type: array
                  id:
                    description: side.
                    type: string
                  kqlCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          type: string
                      type: object
                    type: array
                  metricCustomIndicator:
                    description: '(Block List, Max: 1) (see below for nested schema)'
                    items:
                      properties:
                        filter:
                          description: (String)
                          type: string
                        good:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        index:
                          description: (String)
                          type: string
                        timestampField:
                          description: (String)
                          type: string
                        total:
                          description: '(Block List, Min: 1, Max: 1) (see below for
                            nested schema)'
                          items:
                            properties:
                              equation:
                                description: (String)
                                type: string
                              metrics:
                                description: '(Block List, Min: 1) (see below for
                                  nested schema)'
                                items:
                                  properties:
                                    aggregation:
                                      description: (String)
                                      type: string
                                    field:
                                      description: (String)
                                      type: string
                                    filter:
                                      description: (String)
                                      type: string
                                    name:
                                      description: (String) The name of the SLO.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: (String) The name of the SLO. The name of the SLO.
                    type: string
                  objective:
                    description: '(Block List, Min: 1, Max: 1) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target. (see below for nested schema) The target objective
                      is the value the SLO needs to meet during the time window. If
                      a timeslices budgeting method is used, we also need to define
                      the timesliceTarget which can be different than the overall
                      SLO target.'
                    items:
                      properties:
                        target:
                          description: (Number)
                          type: number
                        timesliceTarget:
                          description: (Number)
                          type: number
                        timesliceWindow:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  settings:
                    description: '(Block List, Max: 1) The default settings should
                      be sufficient for most users, but if needed, these properties
                      can be overwritten. (see below for nested schema) The default
                      settings should be sufficient for most users, but if needed,
                      these properties can be overwritten.'
                    items:
                      properties:
                        frequency:
                          description: (String)
                          type: string
                        syncDelay:
                          description: (String)
                          type: string
                      type: object
                    type: array
                  spaceId:
                    description: (String) An identifier for the space. If space_id
                      is not provided, the default space is used. An identifier for
                      the space. If space_id is not provided, the default space is
                      used.
                    type: string
                  timeWindow:
                    description: '(Block List, Min: 1, Max: 1) Currently support calendarAligned
                      and rolling time windows. Any duration greater than 1 day can
                      be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. 1w for one week, and type:
                      rolling. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      1M for monthly or 1w for weekly, and type: calendarAligned.
                      (see below for nested schema) Currently support `calendarAligned`
                      and `rolling` time windows. Any duration greater than 1 day
                      can be used: days, weeks, months, quarters, years. Rolling time
                      window requires a duration, e.g. `1w` for one week, and type:
                      `rolling`. SLOs defined with such time window, will only consider
                      the SLI data from the last duration period as a moving window.
                      Calendar aligned time window requires a duration, limited to
                      `1M` for monthly or `1w` for weekly, and type: `calendarAligned`.'
                    items:
                      properties:
                        duration:
                          description: (String)
                          type: string
                        type:
                          description: (String)
                          type: string
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
